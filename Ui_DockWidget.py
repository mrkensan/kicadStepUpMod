# -*- coding: utf-8 -*-
#****************************************************************************
#*                                                                          *
#*  Ui_DockWidget - Module which displays a floating dock widget            *
#*                                                                          *
#*  Kicad STEPUP (TM) (3D kicad board and models to STEP) for FreeCAD       *
#*  3D exporter for FreeCAD                                                 *
#*  Kicad STEPUP TOOLS (TM) (3D kicad board and models to STEP) for FreeCAD *
#*  Copyright (c) 2015                                                      *
#*  Maurice easyw@katamail.com                                              *
#*                                                                          *
#*  Kicad STEPUP (TM) is a TradeMark and cannot be freely usable            *
#*                                                                          *
#****************************************************************************
#*                                                                          *
#*  KiCAD_2STEP - Render KiCAD PCB Models as STEP (No Advanced Features)    *
#*                                                                          *
#****************************************************************************

# Excerpted the Ui_DockWidget from "kicadStepUptools.py"
#
#   This module is able to launch the widget, and "exit" the widget,
#   However the widget can not be re-started due to object destruction on exit.
#   This is an artifact of how things are invoked/initialized.
#   Not going to fix this becuase we're going to remove the Widget anyway.
#   This code was primarily moved here to get it out of the main tools file. 



from pickle import FALSE
import PySide
from PySide import QtGui, QtCore

import os, FreeCAD, FreeCADGui
from os.path import expanduser

# Global Vars (used here & elsewhere)
from kicadStepUptools import addVirtual
from kicadStepUptools import export_board_2step
from kicadStepUptools import enable_materials
from kicadStepUptools import textEdit_dim_base
from kicadStepUptools import ini_vars
global KSUWidget


# Global Vars (used only for this UI Widget)
from kicadStepUptools import docking_mode
global test_flag_exit

# Functions
from kicadStepUptools import say, sayw
from kicadStepUptools import group_part_union
from kicadStepUptools import group_part
from kicadStepUptools import cfg_read_all


# Initializers
test_flag_exit=False #True 4 testing


####################################
# embedded button images (#!# These may no longer be used)
import base64
# "b64_data" is a variable containing your base64 encoded jpeg
axis_b64 =\
"""

""" 
exportBoard_b64=\
"""

"""
importBoard_b64=\
"""

"""
exportPart_b64 =\
"""

"""
importFP_b64=\
"""
"""
collisions_b64=\
"""

"""
export3DModel_b64=\
"""
iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAUBSURBVEiJtZVtiFzVGcd/577M3Xm5M7OzMzs7s5u4myWY7ULBGDG120akDfRbhQj90qIIkZAvCir9IMF+KIV+aDVCkNDQL0UtikKLqAGpsVIbUHxZzMTpromy2ZfMvkz27syd+/r0w+7MrgQ0kfiHA5fzwPmd//+55xzFlo4fP/77KIqejOPYANA0LUwkEn84efLkiVtRN7qgKIqeOHbsmGHbNgCO4xinTp36LXDiVtR7oDiOzVwuRyKRYGtHiIh5q+pGtVp9GqBer3PmzBl0Xe86pF6vc6vqqlqtyuHDh/k+dfbs2c3oRkdHcRznphcIgpDG6jrLjo8YfYjEqMgnldCxkzo5O027tQHs6NGNgi58scCq45EfHCZTHKZ8+xSTlTG0rcgA2utrOCuL/Pu9f7K83CBO794G3aiyo/uZmPgRztoSHeca8/WPqf3nTVJ2lureO2g5a8x8+gGkypiDBxjeU+bqR6/cPChhJUnlSiSzRUQEUAB4rsN64wozXyyRGv85AiBCFEcIgmFZFjMzM0RRRPcMfJMkBs8PiGNBZHvEYtKXLaGMBFEUbm5CBJQCEYx8Pk+tVgNgZGSEcrn8jaA4jvG8kCiKtiD0YJrEiAhRuA1SmgYChlKqt0iz2fxWkIjg+T5hGH/NkQhYetQD0YXrOkKMISJ0Yblc7luji0XwvJAgCK9zpFuCSEwUBtCdh01HzWaTqakpwjC8oR7FkeD5Ab4fXueoz1BIDPEOR2y2CMPzPMbHx5m7MseH9XM47jKu7yJbW0mYCZKJDNnkAAV7kNAuYACe5xPvdBQLoWX2otOUhmmZiNsgdOZ3/N4izDVmOfRIhV0/LKHpCgSCjuAs+cxNX2X6nTp++xyZ2ZcpVqfor9yNlhrAsDK03YCgs4REy1h9BTR3jqRziWKfx3RncRvUbruYhsnIZJLS7hQdL0Apha4rhvamuP1QgfuOD7Ox6nPxX+u8/7eXWJh9lYH0OLo2gpGrsrD4Or67wljxJ+weKqL6UzhOBGxdQZcvX2ZlZQVDN9hYC8gPh8xfbqDpGvrWMBI6yZRFMmNx15ESd95fZPb8Nd7600UI/0fGHSDwGgyMJWkufk5mVftab3XbttXs7Oy5fD5/r9YXktnjU91r43dCjISOUgoRCP0IrxPgtjw6rofSFIPjGe46UiI/bFA7v8gvHt/FgQdKvPf3S9xz5yEWF65Sq9V+B5zrHaKjR4+Kb60yn36HqQerm7GZGoah93roeSGdlofb9gmDEMPUsfMp0ukkkcRomkIpxbt/WcCrVRjr38/p06dVLzoATdOCQrZovvFak0/+0exZ7rP1oDBqxtV9aWvXHWmG9mbIDWTwvZCNa23WGg7rqy2yhQxWn0kUxxz89SDPH5nG3JOLetF1Pw4ePGi5TnBPpXCbNjq0j7HKRDiQG3xhbv7L59avhtPeFbt84e2V0n9fXOTSeQd7UGdoj42dTxMGIc2VFq11l6ATkc0nyVYN3n/jopscDJ5tLRFs3z83qKHJxA9E4l9quhwzknrlZ49WtIkfl5Rzrc3SlVV0Xae/ZJPtT/PXhy8EzcXgj0ufhU/dNKiryUkSK8r46sCvCsWf/ma37m54BEGIUgqlKzJ2kvnPHV58bDZAGftu+j3qqiHmQ0qknKuYzNWaaIaGUoBSKKC9uoFhQaZg6q1m8Mx3dlSeMP6MzsN0X74dum5CZPn/vEjUhOHm6mAAAAAASUVORK5CYII=
"""
virtual_b64=\
"""

"""
materials_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjY0cHgiCiAgIGhlaWdodD0iNjRweCIKICAgaWQ9InN2ZzI5MDEiCiAgIHNvZGlwb2RpOnZlcnNpb249IjAuMzIiCiAgIGlua3NjYXBlOnZlcnNpb249IjAuOTIuMCByMTUyOTkiCiAgIHNvZGlwb2RpOmRvY25hbWU9Ik1hdGVyaWFscy5zdmciCiAgIGlua3NjYXBlOm91dHB1dF9leHRlbnNpb249Im9yZy5pbmtzY2FwZS5vdXRwdXQuc3ZnLmlua3NjYXBlIgogICB2ZXJzaW9uPSIxLjEiCiAgIGlua3NjYXBlOmV4cG9ydC1maWxlbmFtZT0iL2hvbWUveW9yaWsvUGFydERlc2lnbl9Hcm9vdmUucG5nIgogICBpbmtzY2FwZTpleHBvcnQteGRwaT0iOTAiCiAgIGlua3NjYXBlOmV4cG9ydC15ZHBpPSI5MCI+CiAgPGRlZnMKICAgICBpZD0iZGVmczI5MDMiPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzOTM3Ij4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzOTM5IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmEzMDA7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZjAwO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwLjQzODYxOCIKICAgICAgICAgaWQ9InN0b3AzOTQxIiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDM5NDMiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzdmNTEwMDtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzOTA1Ij4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzOTA3IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmEzMDA7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZjAwO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwLjQ1NzcwMzY4IgogICAgICAgICBpZD0ic3RvcDM5MDkiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzkxMSIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojY2M4MDAwO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDM4OTciPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZhMzAwO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDM4OTkiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzkwMSIKICAgICAgICAgb2Zmc2V0PSIwLjQwNDc3MTgzIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZjAwO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzdmNTEwMDtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3AzOTAzIiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg2MyI+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzg2NSIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZhMzAwO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmYwMDtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMC41MzE2MDIzOCIKICAgICAgICAgaWQ9InN0b3AzODY3IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDM4NjkiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzdmNTEwMDtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODMwIj4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzODMyIgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmEzMDA7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZjAwO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwLjY0MTM0MDE0IgogICAgICAgICBpZD0ic3RvcDM4MzQiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzgzNiIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojY2M4MDAwO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQyMzciPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDQyMzkiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2Y4MmIzOTtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wNDI0MSIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNTIwMDAxO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNTIiPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMDA5MGZmO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDQwNTQiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wNDA2MCIKICAgICAgICAgb2Zmc2V0PSIwLjUiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmMGYxZjE7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMDA0NmZmO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDQwNTYiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ0MDQ0Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzAwOTBmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A0MDQ2IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMDYxYWZmO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDQwNDgiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMjczIj4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzMjc1IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNjOGUwZjk7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDMyNzciCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2Y3ZjlmYTtzdG9wLW9wYWNpdHk6MC4wOTY0OTEyMzsiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMzc3Ij4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzMzc5IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNjOGUwZjk7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDMzODEiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzAwMjc5NTtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGlua3NjYXBlOnBlcnNwZWN0aXZlCiAgICAgICBzb2RpcG9kaTp0eXBlPSJpbmtzY2FwZTpwZXJzcDNkIgogICAgICAgaW5rc2NhcGU6dnBfeD0iMCA6IDMyIDogMSIKICAgICAgIGlua3NjYXBlOnZwX3k9IjAgOiAxMDAwIDogMCIKICAgICAgIGlua3NjYXBlOnZwX3o9IjY0IDogMzIgOiAxIgogICAgICAgaW5rc2NhcGU6cGVyc3AzZC1vcmlnaW49IjMyIDogMjEuMzMzMzMzIDogMSIKICAgICAgIGlkPSJwZXJzcGVjdGl2ZTI5MDkiIC8+CiAgICA8aW5rc2NhcGU6cGVyc3BlY3RpdmUKICAgICAgIGlkPSJwZXJzcGVjdGl2ZTM2NzQiCiAgICAgICBpbmtzY2FwZTpwZXJzcDNkLW9yaWdpbj0iMC41IDogMC4zMzMzMzMzMyA6IDEiCiAgICAgICBpbmtzY2FwZTp2cF96PSIxIDogMC41IDogMSIKICAgICAgIGlua3NjYXBlOnZwX3k9IjAgOiAxMDAwIDogMCIKICAgICAgIGlua3NjYXBlOnZwX3g9IjAgOiAwLjUgOiAxIgogICAgICAgc29kaXBvZGk6dHlwZT0iaW5rc2NhcGU6cGVyc3AzZCIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA0NCIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNTAiCiAgICAgICB4MT0iNDQuODU4MjE1IgogICAgICAgeTE9IjE0LjAxNjEyMyIKICAgICAgIHgyPSIzMy45Mjg2ODQiCiAgICAgICB5Mj0iMzMuMjE2MjUxIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTc2ODAyMzcsMCwwLDAuOTYwMDM1MDgsMS40Njk0MzE5LDAuMTI3NjU3NjUpIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0MDUyIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA1OCIKICAgICAgIHgxPSI0Mi4zNzM3MDciCiAgICAgICB5MT0iNS43OTc0OTg3IgogICAgICAgeDI9IjUyLjMyMzIxOSIKICAgICAgIHkyPSIyMi42NzU4MjEiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45NzY4MDIzNywwLDAsMC45NjAwMzUwOCwxLjQ2OTQzMTksMC4xMjc2NTc2NSkiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDQwNTItMSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNTgtNiIKICAgICAgIHgxPSI0Mi4zNzM3MDciCiAgICAgICB5MT0iNS43OTc0OTg3IgogICAgICAgeDI9IjUyLjMyMzIxOSIKICAgICAgIHkyPSIyMi42NzU4MjEiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45NzY4MDIzNywwLDAsMC45NjAwMzUwOCwxLjQ2OTQzMTksMC4xMjc2NTc2NSkiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNTItMSI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmEzMDA7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIGlkPSJzdG9wNDA1NC01IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDQwNjAtOCIKICAgICAgICAgb2Zmc2V0PSIwLjUiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmZmMDA7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojY2M4MDAwO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDQwNTYtNCIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTMwLjI5NTIyNSwtMi45Mjg3MTQ3KSIKICAgICAgIHkyPSIyMi42NzU4MjEiCiAgICAgICB4Mj0iNTIuMzIzMjE5IgogICAgICAgeTE9IjUuNzk3NDk4NyIKICAgICAgIHgxPSI0Mi4zNzM3MDciCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNzgiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0MDUyLTEiCiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDQwNDQiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODg1IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTc2ODAyMzcsMCwwLDAuOTYwMDM1MDgsMTA3LjEwNTc5LC0yMi4yMzU5NzgpIgogICAgICAgeDE9IjQ0Ljg1ODIxNSIKICAgICAgIHkxPSIxNC4wMTYxMjMiCiAgICAgICB4Mj0iMzMuOTI4Njg0IgogICAgICAgeTI9IjMzLjIxNjI1MSIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg5MCIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgZ3JhZGllbnRUcmFuc2Zvcm09Im1hdHJpeCgwLjk3NjgwMjM3LDAsMCwwLjk2MDAzNTA4LDEwNy4xMDU3OSwtMjIuMjM1OTc4KSIKICAgICAgIHgxPSI0Mi4zNzM3MDciCiAgICAgICB5MT0iNS43OTc0OTg3IgogICAgICAgeDI9IjUyLjMyMzIxOSIKICAgICAgIHkyPSIyMi42NzU4MjEiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDQwNTIiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODkzIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTc2ODAyMzcsMCwwLDAuOTYwMDM1MDgsMTA3LjEwNTc5LC0yMi4yMzU5NzgpIgogICAgICAgeDE9IjQyLjM3MzcwNyIKICAgICAgIHkxPSI1Ljc5NzQ5ODciCiAgICAgICB4Mj0iNTIuMzIzMjE5IgogICAgICAgeTI9IjIyLjY3NTgyMSIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA1Mi0xLTAiPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMDA5MGZmO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDQwNTQtNS01IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDQwNjAtOC02IgogICAgICAgICBvZmZzZXQ9IjAuNSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2YwZjFmMTtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDQ2ZmY7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wNDA1Ni00LTYiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICB5Mj0iMjIuNjc1ODIxIgogICAgICAgeDI9IjUyLjMyMzIxOSIKICAgICAgIHkxPSI1Ljc5NzQ5ODciCiAgICAgICB4MT0iNDIuMzczNzA3IgogICAgICAgZ3JhZGllbnRUcmFuc2Zvcm09Im1hdHJpeCgwLjk3NjgwMjM3LDAsMCwwLjk2MDAzNTA4LC0zLjM2MzAxOTksLTE4LjMyMjk4MikiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDM5MTIiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0MDUyLTEtMCIKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA1Mi0xLTAtMCI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDkwZmY7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIGlkPSJzdG9wNDA1NC01LTUtOSIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3A0MDYwLTgtNi04IgogICAgICAgICBvZmZzZXQ9IjAuNSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2YwZjFmMTtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDQ2ZmY7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wNDA1Ni00LTYtNCIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIHkyPSIyMi42NzU4MjEiCiAgICAgICB4Mj0iNTIuMzIzMjE5IgogICAgICAgeTE9IjUuNzk3NDk4NyIKICAgICAgIHgxPSI0Mi4zNzM3MDciCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTc2ODAyMzcsMCwwLDAuOTYwMDM1MDgsMTI2LjczNzY5LC03MC4wOTI2ODMpIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzOTg1IgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xLTAtMCIKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA0NC04Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzAwOTBmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A0MDQ2LTIiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwNjFhZmY7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wNDA0OC0xIiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgeTI9IjMzLjIxNjI1MSIKICAgICAgIHgyPSIzMy45Mjg2ODQiCiAgICAgICB5MT0iMTQuMDE2MTIzIgogICAgICAgeDE9IjQ0Ljg1ODIxNSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45NzY4MDIzNywwLDAsMC45NjAwMzUwOCwtMjYuMjQ2NzcsLTguNDYwNzU5NSkiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNzIiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0MDQ0LTgiCiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDQwNDQtOC00IgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg4NS02LTUiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45NzY4MDIzNywwLDAsMC45NjAwMzUwOCw1OC4zMDczNjcsNTQuNjcxNDY5KSIKICAgICAgIHgxPSI0NC44NTgyMTUiCiAgICAgICB5MT0iMTQuMDE2MTIzIgogICAgICAgeDI9IjMzLjkyODY4NCIKICAgICAgIHkyPSIzMy4yMTYyNTEiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNDQtOC00Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzAwOTBmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A0MDQ2LTItMCIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzA2MWFmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3A0MDQ4LTEtOSIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIHkyPSIzMy4yMTYyNTEiCiAgICAgICB4Mj0iMzMuOTI4Njg0IgogICAgICAgeTE9IjE0LjAxNjEyMyIKICAgICAgIHgxPSI0NC44NTgyMTUiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTc2ODAyMzcsMCwwLDAuOTYwMDM1MDgsMTQ1LjQxMjk5LDk0Ljc4MjIyMSkiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQxNjMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0MDQ0LTgtNCIKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA1Mi0xLTAtOSI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDkwZmY7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIGlkPSJzdG9wNDA1NC01LTUtMiIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3A0MDYwLTgtNi01IgogICAgICAgICBvZmZzZXQ9IjAuNSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2YwZjFmMTtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDQ2ZmY7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wNDA1Ni00LTYtNSIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIHkyPSIyMi42NzU4MjEiCiAgICAgICB4Mj0iNTIuMzIzMjE5IgogICAgICAgeTE9IjUuNzk3NDk4NyIKICAgICAgIHgxPSI0Mi4zNzM3MDciCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTc2ODAyMzcsMCwwLDAuOTYwMDM1MDgsMTI2LjczNzY5LC03MC4wOTI2ODcpIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ0MjE3IgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xLTAtOSIKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xLTA1IgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg5MC0zLTUiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC41NTM3MDYzOCwwLDAsMC41NTM2NDMzMSw3OC43OTQ0MzksLTI2LjE3OTg3OCkiCiAgICAgICB4MT0iNDIuMzczNzA3IgogICAgICAgeTE9IjUuNzk3NDk4NyIKICAgICAgIHgyPSI1Mi4zMjMyMTkiCiAgICAgICB5Mj0iMjIuNjc1ODIxIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ0MDUyLTEtMDUiPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZhMzAwO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDQwNTQtNS0xIiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDQwNjAtOC04IgogICAgICAgICBvZmZzZXQ9IjAuNSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmYwMDtzdG9wLW9wYWNpdHk6MTsiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNjYzgwMDA7c3RvcC1vcGFjaXR5OjE7IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wNDA1Ni00LTEiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICB5Mj0iODYuMTkxOTc4IgogICAgICAgeDI9Ii01OC45MTA4MTIiCiAgICAgICB5MT0iNzEuODY4MDI3IgogICAgICAgeDE9Ii02OS4yMDIyNzEiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuNTUzNzA2MzgsMCwwLDAuNTUzNjQzMzEsNjMuNzgxMjI2LC05LjM3ODA3MjIpIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMDU1IgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MzkwNSIKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA1MyIKICAgICAgIHgxPSItODUuNjQwNjMzIgogICAgICAgeTE9IjU0LjYwNDQyNCIKICAgICAgIHgyPSItMzcuNjMyMTI2IgogICAgICAgeTI9IjU0LjYwNDQyNCIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0MDUyLTEiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ0MDU3IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICB4MT0iLTg1LjY0MDYzMyIKICAgICAgIHkxPSI1NC42MDQ0MjQiCiAgICAgICB4Mj0iLTM3LjYzMjEyNiIKICAgICAgIHkyPSI1NC42MDQ0MjQiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDQwNTItMSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNjQiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIHgxPSItODUuNjQwNjMzIgogICAgICAgeTE9IjU0LjYwNDQyNCIKICAgICAgIHgyPSItMzcuNjMyMTI2IgogICAgICAgeTI9IjU0LjYwNDQyNCIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50NDA2NyIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgeDE9Ii04NS42NDA2MzMiCiAgICAgICB5MT0iNTQuNjA0NDI0IgogICAgICAgeDI9Ii0zNy42MzIxMjYiCiAgICAgICB5Mj0iNTQuNjA0NDI0IiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzODMwIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MzgyOCIKICAgICAgIHgxPSI0OC43Mzg4MzQiCiAgICAgICB5MT0iNi44OTk3NTQiCiAgICAgICB4Mj0iNTYuOTQwNzAxIgogICAgICAgeTI9IjE5LjI0Mzg5MyIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICB5Mj0iMjIuNjc1ODIxIgogICAgICAgeDI9IjUyLjMyMzIxOSIKICAgICAgIHkxPSI1Ljc5NzQ5ODciCiAgICAgICB4MT0iNDIuMzczNzA3IgogICAgICAgZ3JhZGllbnRUcmFuc2Zvcm09Im1hdHJpeCgwLjU1MzcwNjM4LDAsMCwwLjU1MzY0MzMxLDYzLjc4MTIyNiwtOS4zNzgwNzIyKSIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MzA1NS0zIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDA1Mi0xLTA1LTUiCiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQwNTItMS0wNS01Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmYTMwMDtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A0MDU0LTUtMS04IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDQwNjAtOC04LTAiCiAgICAgICAgIG9mZnNldD0iMC41IgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZjAwO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzdmNTEwMDtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3A0MDU2LTQtMS0xIiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgeTI9IjIyLjY3NTgyMSIKICAgICAgIHgyPSI1Mi4zMjMyMTkiCiAgICAgICB5MT0iNS43OTc0OTg3IgogICAgICAgeDE9IjQyLjM3MzcwNyIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoLTAuNDQ3NjE3MTIsLTAuMDM5NzQ2MjQsMC4wMzk2ODU3MiwtMC40NDgxOTc2OSwtNDQuMzQ3NjIyLDkwLjg0MjQzOSkiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDMwNzQiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzODYzIgogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzODk3IgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg5NSIKICAgICAgIHgxPSItMTMuMDU0MjA5IgogICAgICAgeTE9IjU1LjMxMjE5NSIKICAgICAgIHgyPSItMTIuOTE1OTQiCiAgICAgICB5Mj0iNDEuNTMwNzU0IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDM5MzciCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzOTM1IgogICAgICAgeDE9IjE3LjYwMzY2OCIKICAgICAgIHkxPSI0OC40MzgzMTYiCiAgICAgICB4Mj0iMTMuODc0NjE3IgogICAgICAgeTI9IjQzLjA5MDI3NSIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzOTM3IgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg4MiIKICAgICAgIHgxPSItMTMuMjIxNTUiCiAgICAgICB5MT0iNTQuODEzMjQ4IgogICAgICAgeDI9Ii0xMy41MDgwOTgiCiAgICAgICB5Mj0iNDAuOTQ1NTcyIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIC8+CiAgICA8cmFkaWFsR3JhZGllbnQKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMS4wNDM0NzgzLDAsMCwxLjA0MzQ3ODMsLTQxLjk1MDE3NiwtMTE0LjU2OTQ3KSIKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDEyNTEyIgogICAgICAgaWQ9InJhZGlhbEdyYWRpZW50Mjc4IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBjeD0iNTUiCiAgICAgICBjeT0iMTI1IgogICAgICAgZng9IjU1IgogICAgICAgZnk9IjEyNSIKICAgICAgIHI9IjE0LjM3NSIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MTI1MTIiPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZmZmO3N0b3Atb3BhY2l0eToxLjAwMDAwMDA7IgogICAgICAgICBvZmZzZXQ9IjAuMDAwMDAwMCIKICAgICAgICAgaWQ9InN0b3AxMjUxMyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZjUyMDtzdG9wLW9wYWNpdHk6MC44OTEwODkwODsiCiAgICAgICAgIG9mZnNldD0iMC41MDAwMDAwMCIKICAgICAgICAgaWQ9InN0b3AxMjUxNyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZjMwMDtzdG9wLW9wYWNpdHk6MC4wMDAwMDAwOyIKICAgICAgICAgb2Zmc2V0PSIxLjAwMDAwMDAiCiAgICAgICAgIGlkPSJzdG9wMTI1MTQiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogIDwvZGVmcz4KICA8c29kaXBvZGk6bmFtZWR2aWV3CiAgICAgaWQ9ImJhc2UiCiAgICAgcGFnZWNvbG9yPSIjZmZmZmZmIgogICAgIGJvcmRlcmNvbG9yPSIjNjY2NjY2IgogICAgIGJvcmRlcm9wYWNpdHk9IjEuMCIKICAgICBpbmtzY2FwZTpwYWdlb3BhY2l0eT0iMC4wIgogICAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiCiAgICAgaW5rc2NhcGU6em9vbT0iOS42ODc1IgogICAgIGlua3NjYXBlOmN4PSIzMiIKICAgICBpbmtzY2FwZTpjeT0iMzIiCiAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ibGF5ZXIxIgogICAgIHNob3dncmlkPSJ0cnVlIgogICAgIGlua3NjYXBlOmRvY3VtZW50LXVuaXRzPSJweCIKICAgICBpbmtzY2FwZTpncmlkLWJib3g9InRydWUiCiAgICAgaW5rc2NhcGU6d2luZG93LXdpZHRoPSIxNTM2IgogICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjgwMSIKICAgICBpbmtzY2FwZTp3aW5kb3cteD0iLTgiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9Ii04IgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiCiAgICAgaW5rc2NhcGU6c25hcC1nbG9iYWw9InRydWUiCiAgICAgaW5rc2NhcGU6c25hcC1ub2Rlcz0idHJ1ZSIKICAgICBpbmtzY2FwZTpvYmplY3QtcGF0aHM9InRydWUiCiAgICAgaW5rc2NhcGU6b2JqZWN0LW5vZGVzPSJ0cnVlIgogICAgIGlua3NjYXBlOnNuYXAtaW50ZXJzZWN0aW9uLXBhdGhzPSJ0cnVlIiAvPgogIDxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTI5MDYiPgogICAgPHJkZjpSREY+CiAgICAgIDxjYzpXb3JrCiAgICAgICAgIHJkZjphYm91dD0iIj4KICAgICAgICA8ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD4KICAgICAgICA8ZGM6dHlwZQogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgICAgPGRjOnRpdGxlPjwvZGM6dGl0bGU+CiAgICAgIDwvY2M6V29yaz4KICAgIDwvcmRmOlJERj4KICA8L21ldGFkYXRhPgogIDxnCiAgICAgaWQ9ImxheWVyMSIKICAgICBpbmtzY2FwZTpsYWJlbD0iTGF5ZXIgMSIKICAgICBpbmtzY2FwZTpncm91cG1vZGU9ImxheWVyIj4KICAgIDxnCiAgICAgICBpZD0iZzM4ODQiPgogICAgICA8cGF0aAogICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgxLjA4OTUyMjYsLTAuNzI4OTE3MDUsMC43MjcyNzIwNSwxLjA5MTk4NywyMy41NzYyNTEsLTM1Ljc5NzQ2OSkiCiAgICAgICAgIGQ9Im0gLTEuNTcwMDcyMiw0OC4xMjIyMzggYSAxMS41NDM1NDUsMTYuNzc3NzE2IDAgMSAxIC0yMy4wODcwODk4LDAgMTEuNTQzNTQ1LDE2Ljc3NzcxNiAwIDEgMSAyMy4wODcwODk4LDAgeiIKICAgICAgICAgc29kaXBvZGk6cnk9IjE2Ljc3NzcxNiIKICAgICAgICAgc29kaXBvZGk6cng9IjExLjU0MzU0NSIKICAgICAgICAgc29kaXBvZGk6Y3k9IjQ4LjEyMjIzOCIKICAgICAgICAgc29kaXBvZGk6Y3g9Ii0xMy4xMTM2MTciCiAgICAgICAgIGlkPSJwYXRoMzgxNS0yLTMiCiAgICAgICAgIHN0eWxlPSJmaWxsOiNmZmM3MDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiM1ZTM4MDA7c3Ryb2tlLXdpZHRoOjEuNTI1MDQ1MzM7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZSIKICAgICAgICAgc29kaXBvZGk6dHlwZT0iYXJjIiAvPgogICAgICA8cGF0aAogICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgxLjEzNTc3NTEsLTAuNzQ2Nzk3NzEsMC43NTgxNDYyNiwxLjExODc3MzksNi44NzkwMTAxLC0yNi43NTgzMTIpIgogICAgICAgICBkPSJtIC0xLjU3MDA3MjIsNDguMTIyMjM4IGEgMTEuNTQzNTQ1LDE2Ljc3NzcxNiAwIDEgMSAtMjMuMDg3MDg5OCwwIDExLjU0MzU0NSwxNi43Nzc3MTYgMCAxIDEgMjMuMDg3MDg5OCwwIHoiCiAgICAgICAgIHNvZGlwb2RpOnJ5PSIxNi43Nzc3MTYiCiAgICAgICAgIHNvZGlwb2RpOnJ4PSIxMS41NDM1NDUiCiAgICAgICAgIHNvZGlwb2RpOmN5PSI0OC4xMjIyMzgiCiAgICAgICAgIHNvZGlwb2RpOmN4PSItMTMuMTEzNjE3IgogICAgICAgICBpZD0icGF0aDM4MTUtMi0zLTgiCiAgICAgICAgIHN0eWxlPSJmaWxsOiNmZmM3MDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiM1ZTM4MDA7c3Ryb2tlLXdpZHRoOjEuNDc1NjgwMjc7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZSIKICAgICAgICAgc29kaXBvZGk6dHlwZT0iYXJjIiAvPgogICAgICA8cGF0aAogICAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9ImNzY2NzY2MiCiAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgIGQ9Im0gMTUuNzQ4NjIzLDE4LjEwMjM0MSBjIDYuMzI2NDU3LC0zLjkxNjU2MSAxNy42Nzc2NDIsLTEuODU3NTE5IDI1Ljk2MTQ0MywxMC4zNDM5NzMgNy41MzE0NDYsMTEuMDkzMzIzIDYuMjMzNDg3LDIyLjMzNTA5NyAtMC41MjE1MTgsMjcuMTk2OTY4IEwgNTYuNDg4NTkxLDQ0LjYzMTE3NiBDIDYzLjcwMzk0NywzOS4xNDk4NjUgNjMuMDgyMTY5LDI3LjkyMTc1OCA1Ni45ODM1NjQsMTguMDc3MzAxIDUwLjEwMTA0LDYuOTY3NDI2MSAzOC42MjYxNjEsNC4yMTIzNDU2IDMyLjA4NDY2NCw3Ljk4OTA4MDcgeiIKICAgICAgICAgc3R5bGU9ImNvbG9yOiMwMDAwMDA7ZmlsbDp1cmwoI2xpbmVhckdyYWRpZW50MzgyOCk7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiM1ZTM4MDA7c3Ryb2tlLXdpZHRoOjI7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6MDttYXJrZXI6bm9uZTt2aXNpYmlsaXR5OnZpc2libGU7ZGlzcGxheTppbmxpbmU7b3ZlcmZsb3c6dmlzaWJsZTtlbmFibGUtYmFja2dyb3VuZDphY2N1bXVsYXRlIgogICAgICAgICBpZD0icGF0aDM4NDYtMyIgLz4KICAgICAgPHBhdGgKICAgICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMC44MzEyNDkzMywtMC41MzU1MTAxNywwLjU1NDg3MDkxLDAuODAyMjQ1MSwxMi41MTUxODcsLTguNjk5MzEyOCkiCiAgICAgICAgIGQ9Im0gLTIuNDI4MDYzNCw0OC4xMjIyMzggYSAxMC42ODU1NTQsMTYuNzc3NzE2IDAgMSAxIC0yMS4zNzExMDY2LDAgMTAuNjg1NTU0LDE2Ljc3NzcxNiAwIDEgMSAyMS4zNzExMDY2LDAgeiIKICAgICAgICAgc29kaXBvZGk6cnk9IjE2Ljc3NzcxNiIKICAgICAgICAgc29kaXBvZGk6cng9IjEwLjY4NTU1NCIKICAgICAgICAgc29kaXBvZGk6Y3k9IjQ4LjEyMjIzOCIKICAgICAgICAgc29kaXBvZGk6Y3g9Ii0xMy4xMTM2MTciCiAgICAgICAgIGlkPSJwYXRoMzgxNSIKICAgICAgICAgc3R5bGU9ImZpbGw6I2ZmYzcwMDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6IzVlMzgwMDtzdHJva2Utd2lkdGg6Mi4wMzY5OTcwODtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLWRhc2hhcnJheTpub25lIgogICAgICAgICBzb2RpcG9kaTp0eXBlPSJhcmMiIC8+CiAgICAgIDxwYXRoCiAgICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0iY2NjY2MiCiAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgIGQ9Ik0gNy4wNjYzOTUxLDMxLjM5NDU1MiBDIDE3LjA2NjUyNywyNC43NTY5MjYgMzYuMzA2MTA4LDUxLjM3NDg0MyAyNS42OTU5NzYsNTkuMzAzNDM0IGwgMTEuOTI5NjIyLC04LjkxNDYwMiBjIDExLjY0MDc0NywtOC43NzY2MTYgLTcuMDU3MjgsLTM0LjIxMjEzIC0xOC42MTg5MzMsLTI2LjkxOTY4IHoiCiAgICAgICAgIHN0eWxlPSJjb2xvcjojMDAwMDAwO2ZpbGw6dXJsKCNsaW5lYXJHcmFkaWVudDMwNTUpO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTojNWUzODAwO3N0cm9rZS13aWR0aDoyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjA7bWFya2VyOm5vbmU7dmlzaWJpbGl0eTp2aXNpYmxlO2Rpc3BsYXk6aW5saW5lO292ZXJmbG93OnZpc2libGU7ZW5hYmxlLWJhY2tncm91bmQ6YWNjdW11bGF0ZSIKICAgICAgICAgaWQ9InBhdGgzODQ2LTMtMyIgLz4KICAgICAgPHBhdGgKICAgICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMC44MzE3MjQ3MiwtMC41NTUxODgyNCwwLjU1NTE4ODI0LDAuODMxNzI0NzIsMC41NzEyMDQxOSwtMS45NTU5ODgzKSIKICAgICAgICAgZD0ibSAtMi4yODQxMjE1LDQ4LjEyMjIzOCBhIDEwLjgyOTQ5NSwxNi43Nzc3MTYgMCAxIDEgLTIxLjY1ODk5MDUsMCAxMC44Mjk0OTUsMTYuNzc3NzE2IDAgMSAxIDIxLjY1ODk5MDUsMCB6IgogICAgICAgICBzb2RpcG9kaTpyeT0iMTYuNzc3NzE2IgogICAgICAgICBzb2RpcG9kaTpyeD0iMTAuODI5NDk1IgogICAgICAgICBzb2RpcG9kaTpjeT0iNDguMTIyMjM4IgogICAgICAgICBzb2RpcG9kaTpjeD0iLTEzLjExMzYxNyIKICAgICAgICAgaWQ9InBhdGgzODE1LTIiCiAgICAgICAgIHN0eWxlPSJmaWxsOiNmZmM3MDA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiM1ZTM4MDA7c3Ryb2tlLXdpZHRoOjI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZSIKICAgICAgICAgc29kaXBvZGk6dHlwZT0iYXJjIiAvPgogICAgICA8cGF0aAogICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjM3OTIzOTEsLTAuMjUzMTQ3NTYsMC4yNTMxNDc1NiwwLjM3OTIzOTEsOC44ODQ0NjE0LDI0LjMwNTQ4NikiCiAgICAgICAgIGQ9Im0gLTIuMjg0MTIxNSw0OC4xMjIyMzggYSAxMC44Mjk0OTUsMTYuNzc3NzE2IDAgMSAxIC0yMS42NTg5OTA1LDAgMTAuODI5NDk1LDE2Ljc3NzcxNiAwIDEgMSAyMS42NTg5OTA1LDAgeiIKICAgICAgICAgc29kaXBvZGk6cnk9IjE2Ljc3NzcxNiIKICAgICAgICAgc29kaXBvZGk6cng9IjEwLjgyOTQ5NSIKICAgICAgICAgc29kaXBvZGk6Y3k9IjQ4LjEyMjIzOCIKICAgICAgICAgc29kaXBvZGk6Y3g9Ii0xMy4xMTM2MTciCiAgICAgICAgIGlkPSJwYXRoMzgxNS0yLTIiCiAgICAgICAgIHN0eWxlPSJmaWxsOnVybCgjbGluZWFyR3JhZGllbnQzODgyKTtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6IzVlMzgwMDtzdHJva2Utd2lkdGg6NC4zODYyODE0OTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLWRhc2hhcnJheTpub25lIgogICAgICAgICBzb2RpcG9kaTp0eXBlPSJhcmMiIC8+CiAgICA8L2c+CiAgICA8Y2lyY2xlCiAgICAgICByPSIxNS4wMDAwMDEiCiAgICAgICBjeT0iMTUuODY1MzIiCiAgICAgICBjeD0iMTUuNDQxMTMiCiAgICAgICBzdHlsZT0iY29sb3I6IzAwMDAwMDtkaXNwbGF5OmJsb2NrO3Zpc2liaWxpdHk6dmlzaWJsZTtmaWxsOnVybCgjcmFkaWFsR3JhZGllbnQyNzgpO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxLjMwNDM0ODExO21hcmtlcjpub25lIgogICAgICAgaWQ9InBhdGgxMjUxMSIKICAgICAgIGlua3NjYXBlOmV4cG9ydC1maWxlbmFtZT0iL2hvbWUvamltbWFjL3hpbWlhbl9hcnQvaWNvbnMvbmF1dGlsdXMvc3VzZTkzL3N0b2NrX25ldy0xNi5wbmciCiAgICAgICBpbmtzY2FwZTpleHBvcnQteGRwaT0iMzMuODUyMjAzIgogICAgICAgaW5rc2NhcGU6ZXhwb3J0LXlkcGk9IjMzLjg1MjIwMyIgLz4KICA8L2c+Cjwvc3ZnPgo=
"""

fusion_b64=\
"""

"""
#new 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

compound_b64=\
"""

"""
shiftX_b64=\
"""

"""
shiftY_b64=\
"""

"""
shiftZ_b64=\
"""

"""
rotateX_b64=\
"""

"""
rotateY_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjY0cHgiCiAgIGhlaWdodD0iNjRweCIKICAgaWQ9InN2ZzMwMDAiCiAgIHNvZGlwb2RpOnZlcnNpb249IjAuMzIiCiAgIGlua3NjYXBlOnZlcnNpb249IjAuNDguNCByOTkzOSIKICAgc29kaXBvZGk6ZG9jbmFtZT0icm90YXRlWS5zdmciCiAgIGlua3NjYXBlOm91dHB1dF9leHRlbnNpb249Im9yZy5pbmtzY2FwZS5vdXRwdXQuc3ZnLmlua3NjYXBlIgogICB2ZXJzaW9uPSIxLjEiPgogIDxkZWZzCiAgICAgaWQ9ImRlZnMzMDAyIj4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MzM5MyI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMyMDRhODc7c3RvcC1vcGFjaXR5OjEiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3AzMzk1IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNzI5ZmNmO3N0b3Atb3BhY2l0eToxIgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wMzM5NyIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDMzOTMiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMzk5IgogICAgICAgeDE9IjE5NDIuNzM4MiIKICAgICAgIHkxPSIxOTM0Ljc1NiIKICAgICAgIHgyPSIxODA5LjUwMjEiCiAgICAgICB5Mj0iMTU0Ny40MTM1IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KC0wLjk4NjU3ODExLDAsMCwwLjk5OTIyMDc4LDM3MDYuODY1OCwtMi42ODExNjk3KSIgLz4KICAgIDxpbmtzY2FwZTpwZXJzcGVjdGl2ZQogICAgICAgc29kaXBvZGk6dHlwZT0iaW5rc2NhcGU6cGVyc3AzZCIKICAgICAgIGlua3NjYXBlOnZwX3g9IjAgOiAzMiA6IDEiCiAgICAgICBpbmtzY2FwZTp2cF95PSIwIDogMTAwMCA6IDAiCiAgICAgICBpbmtzY2FwZTp2cF96PSI2NCA6IDMyIDogMSIKICAgICAgIGlua3NjYXBlOnBlcnNwM2Qtb3JpZ2luPSIzMiA6IDIxLjMzMzMzMyA6IDEiCiAgICAgICBpZD0icGVyc3BlY3RpdmUzMDA4IiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzMzkzLTciCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMzk5LTEiCiAgICAgICB4MT0iMTY2OS43MzE0IgogICAgICAgeTE9IjE3MjYuMDU4NSIKICAgICAgIHgyPSIyMDY3LjE3MDIiCiAgICAgICB5Mj0iMTcyNi4wNTg1IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTg2NTc4MTEsMCwwLDAuOTk5MjIwNzgsMjAuMTI5MjUxLC0yLjY4MTE2OTcpIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMzkzLTciPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMDAzZGRkO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDMzOTUtNCIgLz4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzYzOWVmMDtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3AzMzk3LTAiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzMzkzLTEiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQyOTk5IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTg2NTc4MTEsMCwwLDAuOTk5MjIwNzgsMjAuMTI5MjUxLC0yLjY4MTE2OTcpIgogICAgICAgeDE9IjE5NDIuNzM4MiIKICAgICAgIHkxPSIxOTM0Ljc1NiIKICAgICAgIHgyPSIxODA5LjUwMjEiCiAgICAgICB5Mj0iMTU0Ny40MTM1IiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzMzkzLTEiPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMjA0YTg3O3N0b3Atb3BhY2l0eToxIgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIGlkPSJzdG9wMzM5NS03IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNzI5ZmNmO3N0b3Atb3BhY2l0eToxIgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wMzM5Ny00IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICA8L2RlZnM+CiAgPHNvZGlwb2RpOm5hbWVkdmlldwogICAgIGlkPSJiYXNlIgogICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIxLjAiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAuMCIKICAgICBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIgogICAgIGlua3NjYXBlOnpvb209IjYuODUwMDk2OSIKICAgICBpbmtzY2FwZTpjeD0iLTI1LjIzNDM2OCIKICAgICBpbmtzY2FwZTpjeT0iMjkuNDY2MDgzIgogICAgIGlua3NjYXBlOmN1cnJlbnQtbGF5ZXI9ImczNDA1IgogICAgIHNob3dncmlkPSJ0cnVlIgogICAgIGlua3NjYXBlOmRvY3VtZW50LXVuaXRzPSJweCIKICAgICBpbmtzY2FwZTpncmlkLWJib3g9InRydWUiCiAgICAgaW5rc2NhcGU6d2luZG93LXdpZHRoPSIyNTYwIgogICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjEzNjEiCiAgICAgaW5rc2NhcGU6d2luZG93LXg9Ii05IgogICAgIGlua3NjYXBlOndpbmRvdy15PSItOSIKICAgICBpbmtzY2FwZTpzbmFwLWJib3g9ImZhbHNlIgogICAgIGlua3NjYXBlOnNuYXAtbm9kZXM9InRydWUiCiAgICAgaW5rc2NhcGU6c25hcC1nbG9iYWw9ImZhbHNlIgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiPgogICAgPGlua3NjYXBlOmdyaWQKICAgICAgIHR5cGU9Inh5Z3JpZCIKICAgICAgIGlkPSJncmlkMjk5MCIKICAgICAgIGVtcHNwYWNpbmc9IjIiCiAgICAgICB2aXNpYmxlPSJ0cnVlIgogICAgICAgZW5hYmxlZD0idHJ1ZSIKICAgICAgIHNuYXB2aXNpYmxlZ3JpZGxpbmVzb25seT0idHJ1ZSIgLz4KICA8L3NvZGlwb2RpOm5hbWVkdmlldz4KICA8ZwogICAgIGlkPSJsYXllcjEiCiAgICAgaW5rc2NhcGU6bGFiZWw9IkxheWVyIDEiCiAgICAgaW5rc2NhcGU6Z3JvdXBtb2RlPSJsYXllciI+CiAgICA8ZwogICAgICAgaWQ9ImczNDA1IgogICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMC4xMzY5MzY1LDAsMCwwLjEzNjkzNjUsLTIyMi4yMTc1NCwtMjAzLjM2NTEyKSI+CiAgICAgIDx0ZXh0CiAgICAgICAgIHNvZGlwb2RpOmxpbmVzcGFjaW5nPSIxMjUlIgogICAgICAgICB4bWw6c3BhY2U9InByZXNlcnZlIgogICAgICAgICBzdHlsZT0iZm9udC1zaXplOjIyOC45NTMxMjVweDtmb250LXN0eWxlOm5vcm1hbDtmb250LXZhcmlhbnQ6bm9ybWFsO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zdHJldGNoOm5vcm1hbDtsaW5lLWhlaWdodDoxMjUlO2xldHRlci1zcGFjaW5nOjBweDt3b3JkLXNwYWNpbmc6MHB4O2ZpbGw6IzAwODAwMDtmaWxsLW9wYWNpdHk6MTtzdHJva2U6IzAwNTUwMDtzdHJva2Utd2lkdGg6OC41NDQ5Njc2NTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLWRhc2hhcnJheTpub25lO2Rpc3BsYXk6aW5saW5lO2ZvbnQtZmFtaWx5OkRlamFWdSBTYW5zOy1pbmtzY2FwZS1mb250LXNwZWNpZmljYXRpb246RGVqYVZ1IFNhbnMgQm9sZCIKICAgICAgICAgeD0iMTc3My41NjgxIgogICAgICAgICB5PSIxODAyLjI0NDEiCiAgICAgICAgIGlkPSJ0ZXh0NDE5OSI+PHRzcGFuCiAgICAgICAgICAgc29kaXBvZGk6cm9sZT0ibGluZSIKICAgICAgICAgICBpZD0idHNwYW40MjAxIgogICAgICAgICAgIHg9IjE3NzMuNTY4MSIKICAgICAgICAgICB5PSIxODAyLjI0NDEiCiAgICAgICAgICAgc3R5bGU9InN0cm9rZTojMDA1NTAwO3N0cm9rZS13aWR0aDo4LjU0NDk2NzY1O3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lIj5ZPC90c3Bhbj48L3RleHQ+CiAgICAgIDxnCiAgICAgICAgIGlkPSJnMjk5NSIKICAgICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoLTEsMCwwLDEsMzcxOS45NjQ5LC0zLjI0MjA4NTUpIj4KICAgICAgICA8cGF0aAogICAgICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0ic3NzY2NjY2Nzc3NjY3MiCiAgICAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIKICAgICAgICAgICBzdHlsZT0iZmlsbDp1cmwoI2xpbmVhckdyYWRpZW50Mjk5OSk7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiMwYjE1MjE7c3Ryb2tlLXdpZHRoOjE0LjYwNTMxMDQ0O3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjA7bWFya2VyOm5vbmU7dmlzaWJpbGl0eTp2aXNpYmxlO2Rpc3BsYXk6aW5saW5lO292ZXJmbG93OnZpc2libGU7ZW5hYmxlLWJhY2tncm91bmQ6YWNjdW11bGF0ZSIKICAgICAgICAgICBkPSJtIDE2ODEuMTkyMiwxNzkyLjU3NyBjIDI5Ljc1MTgsMTAxLjkyMSAxMzUuNTY2OSwxNjAuMTgxOSAyMzYuMTk4MiwxMzAuMDQ4OSAxMDAuNjMxMiwtMzAuMTMzMSAxNTguMTU1MSwtMTM3LjMwNDEgMTI4LjQwMzQsLTIzOS4yMjUgLTE1LjY3OTMsLTUzLjcxMjQgLTUyLjQ3OTUsLTk1LjI4OTkgLTk4LjUxNDQsLTExOC4yMDEgbCAyMi40OTA2LC01MS43MDI1IC0xNzkuNzUyNiw5LjM4MjcgOTUuNjY3NCwxNTkuMjIyMSAzMy4yODcsLTUxLjg2NjIgYyAyOC45MTY3LDE1LjEzNTQgNTEuOTQzOCw0MS43MDcxIDYxLjg5NTMsNzUuNzk3NyAxOS4zNzQsNjYuMzY5OSAtMTguMDc5NywxMzYuMTQ5MyAtODMuNjEwMSwxNTUuNzcxNiAtNjUuNTMwNCwxOS42MjIzIC0xMzQuNDU2MiwtMTguMzAyNiAtMTUzLjgzMDMsLTg0LjY3MjYgLTUuNTQzMywtMTguOTkwMiAtNi40MTQ3LC0zOC4yNDY5IC0zLjMyMzUsLTU2LjU0MTQgbCAtNjMuOTMyMSwtMTUuMzcxNyBjIC00Ljg0OTYsMjguMjUxNCAtMy41NDUsNTguMDEyNCA1LjAyMTEsODcuMzU3NCB6IgogICAgICAgICAgIGlkPSJwYXRoMjM5NiIgLz4KICAgICAgICA8cGF0aAogICAgICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0ic3NzY2NjY2Nzc2NjY3MiCiAgICAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIKICAgICAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojNzI5ZmNmO3N0cm9rZS13aWR0aDoxNC42MDUzMDk0OTtzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2UtZGFzaG9mZnNldDowO21hcmtlcjpub25lO3Zpc2liaWxpdHk6dmlzaWJsZTtkaXNwbGF5OmlubGluZTtvdmVyZmxvdzp2aXNpYmxlO2VuYWJsZS1iYWNrZ3JvdW5kOmFjY3VtdWxhdGUiCiAgICAgICAgICAgZD0ibSAxNjk3LjA3MzcsMTc5My4wMTQ5IGMgMjEuOTAyNiw3NS44MDY2IDk2LjEzMzIsMTIxLjg0ODIgMTczLjQ3NjksMTIzLjIxODcgMTEyLjE0NTUsMS45ODcyIDE2OS40MDIyLC0xMTMuMDAzIDE2OS43NjkyLC0xNzMuNDIwNCAwLjYzNCwtMTA0LjM3NyAtNzYuMDIyOCwtMTU1LjA0NDggLTExMS4zMjE0LC0xNzIuMjQ5OCBsIDE2LjU0MTIsLTM4LjU5MDkgLTEyOS42MDY1LDUuMTkwMiA2OS44MjcsMTE2LjczNiAyNy4xNjU5LC00NC44MjQ0IGMgNjkuMjc0NSw0Mi41MzQ3IDg3LjQ1NzMsODIuMTU3NCA4OC4yMzE0LDEzNC44MDE4IDAuNzkyMSw1My44Njk5IC00Mi42NjM3LDEzMy45Nzk1IC0xMzMuNDMwOSwxMzcuNjM4NyAtNzguMTY0MiwzLjE1MTEgLTEyMy4wMTQzLC01Mi45MTMxIC0xMzcuODcsLTEwMi43NTMyIC02LjU3NCwtMTYuMjUyMiAtNi41NzgzLC0zMy4zNjgzIC02LjE5OTcsLTQ3LjEwNjUgbCAtMzUuNjYxMSwtOC42Mzg4IGMgLTEuMDYzMSwyMS41NDcyIDIuNDMwMSw0Ni45ODkzIDkuMDc4LDY5Ljk5ODYgeiIKICAgICAgICAgICBpZD0icGF0aDIzOTYtOSIgLz4KICAgICAgPC9nPgogICAgPC9nPgogIDwvZz4KICA8bWV0YWRhdGEKICAgICBpZD0ibWV0YWRhdGE1MzI0Ij4KICAgIDxyZGY6UkRGPgogICAgICA8Y2M6V29yawogICAgICAgICByZGY6YWJvdXQ9IiI+CiAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+CiAgICAgICAgPGRjOnR5cGUKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPgogICAgICAgIDxkYzp0aXRsZSAvPgogICAgICAgIDxjYzpsaWNlbnNlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSIiIC8+CiAgICAgICAgPGRjOmRhdGU+TW9uIE9jdCAxMCAxMzo0NDo1MiAyMDExICswMDAwPC9kYzpkYXRlPgogICAgICAgIDxkYzpjcmVhdG9yPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+W3dtYXllcl08L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOmNyZWF0b3I+CiAgICAgICAgPGRjOnJpZ2h0cz4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPkZyZWVDQUQgTEdQTDIrPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpyaWdodHM+CiAgICAgICAgPGRjOnB1Ymxpc2hlcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPkZyZWVDQUQ8L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOnB1Ymxpc2hlcj4KICAgICAgICA8ZGM6aWRlbnRpZmllcj5GcmVlQ0FEL3NyYy9Nb2QvRHJhZnQvUmVzb3VyY2VzL2ljb25zL0RyYWZ0X1JvdGF0ZS5zdmc8L2RjOmlkZW50aWZpZXI+CiAgICAgICAgPGRjOnJlbGF0aW9uPmh0dHA6Ly93d3cuZnJlZWNhZHdlYi5vcmcvd2lraS9pbmRleC5waHA/dGl0bGU9QXJ0d29yazwvZGM6cmVsYXRpb24+CiAgICAgICAgPGRjOmNvbnRyaWJ1dG9yPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+W2Fncnlzb25dIEFsZXhhbmRlciBHcnlzb248L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOmNvbnRyaWJ1dG9yPgogICAgICAgIDxkYzpkZXNjcmlwdGlvbj5BbiBhcnJvdyBpbiBhIGNpcmN1bGFyIHNoYXBlIHdpdGggdGhlIGhlYWQgY3VydmluZyB0b3dhcmRzIHRoZSB0YWlsPC9kYzpkZXNjcmlwdGlvbj4KICAgICAgICA8ZGM6c3ViamVjdD4KICAgICAgICAgIDxyZGY6QmFnPgogICAgICAgICAgICA8cmRmOmxpPmFycm93PC9yZGY6bGk+CiAgICAgICAgICAgIDxyZGY6bGk+Y3VydmVkPC9yZGY6bGk+CiAgICAgICAgICAgIDxyZGY6bGk+cmVmcmVzaDwvcmRmOmxpPgogICAgICAgICAgICA8cmRmOmxpPnJvdGF0ZTwvcmRmOmxpPgogICAgICAgICAgPC9yZGY6QmFnPgogICAgICAgIDwvZGM6c3ViamVjdD4KICAgICAgPC9jYzpXb3JrPgogICAgPC9yZGY6UkRGPgogIDwvbWV0YWRhdGE+Cjwvc3ZnPgo=
"""
rotateZ_b64=\
"""

"""
putX_b64=\
"""

"""
putY_b64=\
"""

"""
putZ_b64=\
"""

"""
centerX_b64=\
"""

"""
centerY_b64=\
"""

"""
centerZ_b64=\
"""

"""
help_b64=\
"""

"""
edit_b64=\
"""

"""
#"""
#
#"""
closeW_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjY0IgogICBoZWlnaHQ9IjY0IgogICBpZD0ic3ZnMiIKICAgdmVyc2lvbj0iMS4xIgogICBpbmtzY2FwZTp2ZXJzaW9uPSIwLjQ4LjUgcjEwMDQwIgogICBzb2RpcG9kaTpkb2NuYW1lPSJlZGl0X0NhbmNlbC5zdmciCiAgIHZpZXdCb3g9IjAgMCA2NCA2NCI+CiAgPGRlZnMKICAgICBpZD0iZGVmczQiPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODc5IgogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIj4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzODgxIgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNhNDAwMDA7c3RvcC1vcGFjaXR5OjEiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzg4MyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZWYyOTI5O3N0b3Atb3BhY2l0eToxIiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg2OSI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNhNDAwMDA7c3RvcC1vcGFjaXR5OjEiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3AzODcxIiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZWYyOTI5O3N0b3Atb3BhY2l0eToxIgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIGlkPSJzdG9wMzg3MyIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDM4NjkiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODc1IgogICAgICAgeDE9Ii00NSIKICAgICAgIHkxPSIxMDQ0LjM2MjIiCiAgICAgICB4Mj0iLTU1IgogICAgICAgeTI9Ijk5NC4zNjIxOCIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgZ3JhZGllbnRUcmFuc2Zvcm09Im1hdHJpeCgwLjg2NjQ3NzI3LDAsMCwwLjg2NjQ3NzM5LDczLjY1MzQwOSwxMzYuMzAzOTEpIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQzODc5IgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg3NyIKICAgICAgIHgxPSItNDUiCiAgICAgICB5MT0iMTA0NC4zNjIyIgogICAgICAgeDI9Ii01NSIKICAgICAgIHkyPSI5OTQuMzYyMTgiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC44NjY0NzcyNywwLDAsMC44NjY0NzczOSw3My42NTM0MDksMTM2LjMwMzkxKSIgLz4KICA8L2RlZnM+CiAgPHNvZGlwb2RpOm5hbWVkdmlldwogICAgIGlkPSJiYXNlIgogICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIxLjAiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAuMCIKICAgICBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIgogICAgIGlua3NjYXBlOnpvb209IjYuNTU3NzM4IgogICAgIGlua3NjYXBlOmN4PSI1MC4yNzE5NTgiCiAgICAgaW5rc2NhcGU6Y3k9IjMyLjkwMDkyNCIKICAgICBpbmtzY2FwZTpkb2N1bWVudC11bml0cz0icHgiCiAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ibGF5ZXIxIgogICAgIHNob3dncmlkPSJ0cnVlIgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTU5OCIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSI4MzYiCiAgICAgaW5rc2NhcGU6d2luZG93LXg9IjAiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9IjI3IgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjAiCiAgICAgaW5rc2NhcGU6c25hcC1nbG9iYWw9InRydWUiCiAgICAgaW5rc2NhcGU6c25hcC1iYm94PSJ0cnVlIgogICAgIGlua3NjYXBlOnNuYXAtbm9kZXM9InRydWUiPgogICAgPGlua3NjYXBlOmdyaWQKICAgICAgIHR5cGU9Inh5Z3JpZCIKICAgICAgIGlkPSJncmlkMTE1MjEiCiAgICAgICBlbXBzcGFjaW5nPSIyIgogICAgICAgZG90dGVkPSJmYWxzZSIKICAgICAgIHZpc2libGU9InRydWUiCiAgICAgICBlbmFibGVkPSJ0cnVlIgogICAgICAgc25hcHZpc2libGVncmlkbGluZXNvbmx5PSJ0cnVlIiAvPgogIDwvc29kaXBvZGk6bmFtZWR2aWV3PgogIDxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTciPgogICAgPHJkZjpSREY+CiAgICAgIDxjYzpXb3JrCiAgICAgICAgIHJkZjphYm91dD0iIj4KICAgICAgICA8ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD4KICAgICAgICA8ZGM6dHlwZQogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgICAgPGRjOnRpdGxlPjwvZGM6dGl0bGU+CiAgICAgIDwvY2M6V29yaz4KICAgIDwvcmRmOlJERj4KICA8L21ldGFkYXRhPgogIDxnCiAgICAgaW5rc2NhcGU6bGFiZWw9IkxheWVyIDEiCiAgICAgaW5rc2NhcGU6Z3JvdXBtb2RlPSJsYXllciIKICAgICBpZD0ibGF5ZXIxIgogICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKDAsLTk4OC4zNjIxOCkiPgogICAgPHBhdGgKICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMyODAwMDA7c3Ryb2tlLXdpZHRoOjE2O3N0cm9rZS1saW5lY2FwOnNxdWFyZTtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgIGQ9Im0gMTMsMTAwMS4zNjIyIDM4LjEyNSwzOC4xMjUiCiAgICAgICBpZD0icGF0aDMwMDIiCiAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgc29kaXBvZGk6bm9kZXR5cGVzPSJjYyIgLz4KICAgIDxwYXRoCiAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojMjgwMDAwO3N0cm9rZS13aWR0aDoxNjtzdHJva2UtbGluZWNhcDpzcXVhcmU7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICBkPSJNIDUxLjEyNSwxMDAxLjM2MjIgMTMsMTAzOS40ODcyIgogICAgICAgaWQ9InBhdGgzMDAyLTYiCiAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgc29kaXBvZGk6bm9kZXR5cGVzPSJjYyIgLz4KICAgIDxwYXRoCiAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojZWYyOTI5O3N0cm9rZS13aWR0aDoxMjtzdHJva2UtbGluZWNhcDpzcXVhcmU7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtZGFzaGFycmF5Om5vbmUiCiAgICAgICBkPSJtIDEzLDEwMDEuMzYyMiAzOC4xMjUsMzguMTI1IgogICAgICAgaWQ9InBhdGgzMDAyLTciCiAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgc29kaXBvZGk6bm9kZXR5cGVzPSJjYyIgLz4KICAgIDxwYXRoCiAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojZWYyOTI5O3N0cm9rZS13aWR0aDoxMjtzdHJva2UtbGluZWNhcDpzcXVhcmU7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtZGFzaGFycmF5Om5vbmUiCiAgICAgICBkPSJNIDUxLjEyNSwxMDAxLjM2MjIgMTMsMTAzOS40ODcyIgogICAgICAgaWQ9InBhdGgzMDAyLTYtNSIKICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9ImNjIiAvPgogICAgPHBhdGgKICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOnVybCgjbGluZWFyR3JhZGllbnQzODc3KTtzdHJva2Utd2lkdGg6ODtzdHJva2UtbGluZWNhcDpzcXVhcmU7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtZGFzaGFycmF5Om5vbmUiCiAgICAgICBkPSJtIDEzLDEwMDEuMzYyMiAzOC4xMjUsMzguMTI1IgogICAgICAgaWQ9InBhdGgzMDAyLTctNiIKICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9ImNjIiAvPgogICAgPHBhdGgKICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOnVybCgjbGluZWFyR3JhZGllbnQzODc1KTtzdHJva2Utd2lkdGg6ODtzdHJva2UtbGluZWNhcDpzcXVhcmU7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtZGFzaGFycmF5Om5vbmUiCiAgICAgICBkPSJNIDUxLjEyNSwxMDAxLjM2MjIgMTMsMTAzOS40ODcyIgogICAgICAgaWQ9InBhdGgzMDAyLTYtNS0yIgogICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIKICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0iY2MiIC8+CiAgPC9nPgo8L3N2Zz4K
"""
un_dock_b64=\
"""

"""
dock_right_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiCiAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICB3aWR0aD0iNjRweCIKICAgaGVpZ2h0PSI2NHB4IgogICBpZD0ic3ZnMjk4NSIKICAgdmVyc2lvbj0iMS4xIgogICBpbmtzY2FwZTp2ZXJzaW9uPSIwLjQ4LjQgcjk5MzkiCiAgIHNvZGlwb2RpOmRvY25hbWU9ImRvY2stbGVmdC5zdmciPgogIDxkZWZzCiAgICAgaWQ9ImRlZnMyOTg3IiAvPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICBpZD0iYmFzZSIKICAgICBwYWdlY29sb3I9IiNmZmZmZmYiCiAgICAgYm9yZGVyY29sb3I9IiM2NjY2NjYiCiAgICAgYm9yZGVyb3BhY2l0eT0iMS4wIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwLjAiCiAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICBpbmtzY2FwZTp6b29tPSI1LjA5NjgzMTIiCiAgICAgaW5rc2NhcGU6Y3g9Ii01OS45NzI4ODUiCiAgICAgaW5rc2NhcGU6Y3k9IjE2LjE5MzQxMyIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJsYXllcjEiCiAgICAgc2hvd2dyaWQ9InRydWUiCiAgICAgaW5rc2NhcGU6ZG9jdW1lbnQtdW5pdHM9InB4IgogICAgIGlua3NjYXBlOmdyaWQtYmJveD0idHJ1ZSIKICAgICBpbmtzY2FwZTp3aW5kb3ctd2lkdGg9IjI1NjAiCiAgICAgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iMTM2MSIKICAgICBpbmtzY2FwZTp3aW5kb3cteD0iLTkiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9Ii05IgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiCiAgICAgaW5rc2NhcGU6c25hcC1iYm94PSJ0cnVlIgogICAgIGlua3NjYXBlOnNuYXAtbm9kZXM9ImZhbHNlIj4KICAgIDxpbmtzY2FwZTpncmlkCiAgICAgICB0eXBlPSJ4eWdyaWQiCiAgICAgICBpZD0iZ3JpZDI5ODciCiAgICAgICBlbXBzcGFjaW5nPSIyIgogICAgICAgdmlzaWJsZT0idHJ1ZSIKICAgICAgIGVuYWJsZWQ9InRydWUiCiAgICAgICBzbmFwdmlzaWJsZWdyaWRsaW5lc29ubHk9InRydWUiIC8+CiAgPC9zb2RpcG9kaTpuYW1lZHZpZXc+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhMjk5MCI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPgogICAgICAgIDxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PgogICAgICAgIDxkYzp0eXBlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz4KICAgICAgICA8ZGM6dGl0bGU+PC9kYzp0aXRsZT4KICAgICAgICA8ZGM6Y3JlYXRvcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPlt5b3Jpa3ZhbmhhdnJlXTwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6Y3JlYXRvcj4KICAgICAgICA8ZGM6dGl0bGU+QXJjaF9TZWN0aW9uUGxhbmVfVHJlZTwvZGM6dGl0bGU+CiAgICAgICAgPGRjOmRhdGU+MjAxMS0xMi0wNjwvZGM6ZGF0ZT4KICAgICAgICA8ZGM6cmVsYXRpb24+aHR0cDovL3d3dy5mcmVlY2Fkd2ViLm9yZy93aWtpL2luZGV4LnBocD90aXRsZT1BcnR3b3JrPC9kYzpyZWxhdGlvbj4KICAgICAgICA8ZGM6cHVibGlzaGVyPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+RnJlZUNBRDwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6cHVibGlzaGVyPgogICAgICAgIDxkYzppZGVudGlmaWVyPkZyZWVDQUQvc3JjL01vZC9BcmNoL1Jlc291cmNlcy9pY29ucy9BcmNoX1NlY3Rpb25QbGFuZV9UcmVlLnN2ZzwvZGM6aWRlbnRpZmllcj4KICAgICAgICA8ZGM6cmlnaHRzPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+RnJlZUNBRCBMR1BMMis8L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOnJpZ2h0cz4KICAgICAgICA8Y2M6bGljZW5zZT5odHRwczovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2xlc3Nlci5odG1sPC9jYzpsaWNlbnNlPgogICAgICAgIDxkYzpjb250cmlidXRvcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPlthZ3J5c29uXSBBbGV4YW5kZXIgR3J5c29uPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjb250cmlidXRvcj4KICAgICAgPC9jYzpXb3JrPgogICAgPC9yZGY6UkRGPgogIDwvbWV0YWRhdGE+CiAgPGcKICAgICBpZD0ibGF5ZXIxIgogICAgIGlua3NjYXBlOmxhYmVsPSJMYXllciAxIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiPgogICAgPHBhdGgKICAgICAgIHNvZGlwb2RpOnR5cGU9InN0YXIiCiAgICAgICBzdHlsZT0iY29sb3I6IzAwMDAwMDtmaWxsOiM4MDgwODA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOiM0ZDRkNGQ7c3Ryb2tlLXdpZHRoOjEuNTc0ODgyMjc7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2UtZGFzaG9mZnNldDowO21hcmtlcjpub25lO3Zpc2liaWxpdHk6dmlzaWJsZTtkaXNwbGF5OmlubGluZTtvdmVyZmxvdzp2aXNpYmxlO2VuYWJsZS1iYWNrZ3JvdW5kOmFjY3VtdWxhdGUiCiAgICAgICBpZD0icGF0aDI5OTciCiAgICAgICBzb2RpcG9kaTpzaWRlcz0iMyIKICAgICAgIHNvZGlwb2RpOmN4PSIyMiIKICAgICAgIHNvZGlwb2RpOmN5PSIxNy4wOTA5MDgiCiAgICAgICBzb2RpcG9kaTpyMT0iMjAuNDMyNTEyIgogICAgICAgc29kaXBvZGk6cjI9IjEwLjIxNjI1NyIKICAgICAgIHNvZGlwb2RpOmFyZzE9IjIuMDk0Mzk1MSIKICAgICAgIHNvZGlwb2RpOmFyZzI9IjMuMTQxNTkyNyIKICAgICAgIGlua3NjYXBlOmZsYXRzaWRlZD0idHJ1ZSIKICAgICAgIGlua3NjYXBlOnJvdW5kZWQ9IjAiCiAgICAgICBpbmtzY2FwZTpyYW5kb21pemVkPSIwIgogICAgICAgZD0ibSAxMS43ODM3NDQsMzQuNzg1OTgzIDAsLTM1LjM5MDE0OTYzIDMwLjY0ODc2OCwxNy42OTUwNzQ2MyB6IgogICAgICAgaW5rc2NhcGU6dHJhbnNmb3JtLWNlbnRlci14PSItNi42Njg0MTU5IgogICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMS4zMDU0NTI5LDAsMCwxLjEzMDA0NzYsLTMuMjAyMzc3OCwxMi42ODY0NTkpIiAvPgogIDwvZz4KPC9zdmc+Cg==
"""
dock_left_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiCiAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICB3aWR0aD0iNjRweCIKICAgaGVpZ2h0PSI2NHB4IgogICBpZD0ic3ZnMjk4NSIKICAgdmVyc2lvbj0iMS4xIgogICBpbmtzY2FwZTp2ZXJzaW9uPSIwLjQ4LjQgcjk5MzkiCiAgIHNvZGlwb2RpOmRvY25hbWU9ImRvY2stbGVmdC5zdmciPgogIDxkZWZzCiAgICAgaWQ9ImRlZnMyOTg3IiAvPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICBpZD0iYmFzZSIKICAgICBwYWdlY29sb3I9IiNmZmZmZmYiCiAgICAgYm9yZGVyY29sb3I9IiM2NjY2NjYiCiAgICAgYm9yZGVyb3BhY2l0eT0iMS4wIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwLjAiCiAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICBpbmtzY2FwZTp6b29tPSI1LjA5NjgzMTIiCiAgICAgaW5rc2NhcGU6Y3g9Ii01OS45NzI4ODUiCiAgICAgaW5rc2NhcGU6Y3k9IjE2LjE5MzQxMyIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJsYXllcjEiCiAgICAgc2hvd2dyaWQ9InRydWUiCiAgICAgaW5rc2NhcGU6ZG9jdW1lbnQtdW5pdHM9InB4IgogICAgIGlua3NjYXBlOmdyaWQtYmJveD0idHJ1ZSIKICAgICBpbmtzY2FwZTp3aW5kb3ctd2lkdGg9IjI1NjAiCiAgICAgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iMTM2MSIKICAgICBpbmtzY2FwZTp3aW5kb3cteD0iLTkiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9Ii05IgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiCiAgICAgaW5rc2NhcGU6c25hcC1iYm94PSJ0cnVlIgogICAgIGlua3NjYXBlOnNuYXAtbm9kZXM9ImZhbHNlIj4KICAgIDxpbmtzY2FwZTpncmlkCiAgICAgICB0eXBlPSJ4eWdyaWQiCiAgICAgICBpZD0iZ3JpZDI5ODciCiAgICAgICBlbXBzcGFjaW5nPSIyIgogICAgICAgdmlzaWJsZT0idHJ1ZSIKICAgICAgIGVuYWJsZWQ9InRydWUiCiAgICAgICBzbmFwdmlzaWJsZWdyaWRsaW5lc29ubHk9InRydWUiIC8+CiAgPC9zb2RpcG9kaTpuYW1lZHZpZXc+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhMjk5MCI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPgogICAgICAgIDxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PgogICAgICAgIDxkYzp0eXBlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz4KICAgICAgICA8ZGM6dGl0bGUgLz4KICAgICAgICA8ZGM6Y3JlYXRvcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPlt5b3Jpa3ZhbmhhdnJlXTwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6Y3JlYXRvcj4KICAgICAgICA8ZGM6dGl0bGU+QXJjaF9TZWN0aW9uUGxhbmVfVHJlZTwvZGM6dGl0bGU+CiAgICAgICAgPGRjOmRhdGU+MjAxMS0xMi0wNjwvZGM6ZGF0ZT4KICAgICAgICA8ZGM6cmVsYXRpb24+aHR0cDovL3d3dy5mcmVlY2Fkd2ViLm9yZy93aWtpL2luZGV4LnBocD90aXRsZT1BcnR3b3JrPC9kYzpyZWxhdGlvbj4KICAgICAgICA8ZGM6cHVibGlzaGVyPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+RnJlZUNBRDwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6cHVibGlzaGVyPgogICAgICAgIDxkYzppZGVudGlmaWVyPkZyZWVDQUQvc3JjL01vZC9BcmNoL1Jlc291cmNlcy9pY29ucy9BcmNoX1NlY3Rpb25QbGFuZV9UcmVlLnN2ZzwvZGM6aWRlbnRpZmllcj4KICAgICAgICA8ZGM6cmlnaHRzPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+RnJlZUNBRCBMR1BMMis8L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOnJpZ2h0cz4KICAgICAgICA8Y2M6bGljZW5zZT5odHRwczovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2xlc3Nlci5odG1sPC9jYzpsaWNlbnNlPgogICAgICAgIDxkYzpjb250cmlidXRvcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPlthZ3J5c29uXSBBbGV4YW5kZXIgR3J5c29uPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjb250cmlidXRvcj4KICAgICAgPC9jYzpXb3JrPgogICAgPC9yZGY6UkRGPgogIDwvbWV0YWRhdGE+CiAgPGcKICAgICBpZD0ibGF5ZXIxIgogICAgIGlua3NjYXBlOmxhYmVsPSJMYXllciAxIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiPgogICAgPHBhdGgKICAgICAgIHNvZGlwb2RpOnR5cGU9InN0YXIiCiAgICAgICBzdHlsZT0iY29sb3I6IzAwMDAwMDtmaWxsOiM4MDgwODA7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOiM0ZDRkNGQ7c3Ryb2tlLXdpZHRoOjEuNTc0ODgyMjcwMDAwMDAwMDA7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2UtZGFzaG9mZnNldDowO21hcmtlcjpub25lO3Zpc2liaWxpdHk6dmlzaWJsZTtkaXNwbGF5OmlubGluZTtvdmVyZmxvdzp2aXNpYmxlO2VuYWJsZS1iYWNrZ3JvdW5kOmFjY3VtdWxhdGUiCiAgICAgICBpZD0icGF0aDI5OTciCiAgICAgICBzb2RpcG9kaTpzaWRlcz0iMyIKICAgICAgIHNvZGlwb2RpOmN4PSIyMiIKICAgICAgIHNvZGlwb2RpOmN5PSIxNy4wOTA5MDgiCiAgICAgICBzb2RpcG9kaTpyMT0iMjAuNDMyNTEyIgogICAgICAgc29kaXBvZGk6cjI9IjEwLjIxNjI1NyIKICAgICAgIHNvZGlwb2RpOmFyZzE9IjIuMDk0Mzk1MSIKICAgICAgIHNvZGlwb2RpOmFyZzI9IjMuMTQxNTkyNyIKICAgICAgIGlua3NjYXBlOmZsYXRzaWRlZD0idHJ1ZSIKICAgICAgIGlua3NjYXBlOnJvdW5kZWQ9IjAiCiAgICAgICBpbmtzY2FwZTpyYW5kb21pemVkPSIwIgogICAgICAgZD0ibSAxMS43ODM3NDQsMzQuNzg1OTgzIDAsLTM1LjM5MDE0OTYzIDMwLjY0ODc2OCwxNy42OTUwNzQ2MyB6IgogICAgICAgaW5rc2NhcGU6dHJhbnNmb3JtLWNlbnRlci14PSI2LjY2ODQxNTkiCiAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgtMS4zMDU0NTI5LDAsMCwxLjEzMDA0NzYsNjcuNTc0MzkxLDEyLjY4NjQ1OSkiIC8+CiAgPC9nPgo8L3N2Zz4K
"""
stop_grey_b64=\
"""

"""
stop_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjQ4LjAwMDAwMHB4IgogICBoZWlnaHQ9IjQ4LjAwMDAwMHB4IgogICBpZD0ic3ZnNjM2MSIKICAgc29kaXBvZGk6dmVyc2lvbj0iMC4zMiIKICAgaW5rc2NhcGU6dmVyc2lvbj0iMC45Mi4xIHIxNTM3MSIKICAgc29kaXBvZGk6ZG9jbmFtZT0ic3RvcC5zdmciCiAgIGlua3NjYXBlOm91dHB1dF9leHRlbnNpb249Im9yZy5pbmtzY2FwZS5vdXRwdXQuc3ZnLmlua3NjYXBlIgogICB2ZXJzaW9uPSIxLjEiPgogIDxkZWZzCiAgICAgaWQ9ImRlZnMzIj4KICAgIDxpbmtzY2FwZTpwZXJzcGVjdGl2ZQogICAgICAgc29kaXBvZGk6dHlwZT0iaW5rc2NhcGU6cGVyc3AzZCIKICAgICAgIGlua3NjYXBlOnZwX3g9IjAgOiAyNCA6IDEiCiAgICAgICBpbmtzY2FwZTp2cF95PSIwIDogMTAwMCA6IDAiCiAgICAgICBpbmtzY2FwZTp2cF96PSI0OCA6IDI0IDogMSIKICAgICAgIGlua3NjYXBlOnBlcnNwM2Qtb3JpZ2luPSIyNCA6IDE2IDogMSIKICAgICAgIGlkPSJwZXJzcGVjdGl2ZTUyIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQyMjU2Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmMDIwMjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3AyMjU4IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmY5YjliO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDIyNjAiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQyMjQ4Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmZmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3AyMjUwIiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZmZmO3N0b3Atb3BhY2l0eTowOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDIyNTIiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ5NjQ3Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmZmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A5NjQ5IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZGJkYmRiO3N0b3Atb3BhY2l0eToxOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDk2NTEiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ3ODk1Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmZmZjtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A3ODk3IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZmZmO3N0b3Atb3BhY2l0eTowOyIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBpZD0ic3RvcDc4OTkiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ0OTgxIj4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2NjMDAwMDtzdG9wLW9wYWNpdHk6MTsiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3A0OTgzIiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojYjMwMDAwO3N0b3Atb3BhY2l0eToxLjAwMDAwMDA7IgogICAgICAgICBvZmZzZXQ9IjEuMDAwMDAwMCIKICAgICAgICAgaWQ9InN0b3A0OTg1IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MTU3NjIiCiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDE1NzY0IgogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmZmZmY7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDE1NzY2IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmZmZmY7c3RvcC1vcGFjaXR5OjA7IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MTQyMzYiPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDE0MjM4IgogICAgICAgICBvZmZzZXQ9IjAuMDAwMDAwMCIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2VkNDA0MDtzdG9wLW9wYWNpdHk6MS4wMDAwMDAwOyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AxNDI0MCIKICAgICAgICAgb2Zmc2V0PSIxLjAwMDAwMDAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNhNDAwMDA7c3RvcC1vcGFjaXR5OjEuMDAwMDAwMDsiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQxMTc4MCI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZjhiOGI7c3RvcC1vcGFjaXR5OjEuMDAwMDAwMDsiCiAgICAgICAgIG9mZnNldD0iMC4wMDAwMDAwIgogICAgICAgICBpZD0ic3RvcDExNzgyIiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZWMxYjFiO3N0b3Atb3BhY2l0eToxLjAwMDAwMDA7IgogICAgICAgICBvZmZzZXQ9IjEuMDAwMDAwMCIKICAgICAgICAgaWQ9InN0b3AxMTc4NCIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDExMDE0Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2E4MDAwMDtzdG9wLW9wYWNpdHk6MS4wMDAwMDAwOyIKICAgICAgICAgb2Zmc2V0PSIwLjAwMDAwMDAiCiAgICAgICAgIGlkPSJzdG9wMTEwMTYiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNjNjAwMDA7c3RvcC1vcGFjaXR5OjEuMDAwMDAwMDsiCiAgICAgICAgIG9mZnNldD0iMC4wMDAwMDAwIgogICAgICAgICBpZD0ic3RvcDEzMjQ1IiAvPgogICAgICA8c3RvcAogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZTUwMDAwO3N0b3Atb3BhY2l0eToxLjAwMDAwMDA7IgogICAgICAgICBvZmZzZXQ9IjEuMDAwMDAwMCIKICAgICAgICAgaWQ9InN0b3AxMTAxOCIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIHkyPSI5LjY1MDc1MzAiCiAgICAgICB4Mj0iOS44OTQwMjI5IgogICAgICAgeTE9IjUuMzg1NTQyNCIKICAgICAgIHgxPSI1LjczNjUyNzAiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KC0xLjAwMDAwMCwwLjAwMDAwMCwwLjAwMDAwMCwtMS4wMDAwMDAsMzEuNzIxNzAsMzEuMjkwNzkpIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQxNTc3MiIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDE1NzYyIgogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQxMTc4MCIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDIwNTciCiAgICAgICB4MT0iMTUuNzM3MDAxIgogICAgICAgeTE9IjEyLjUwMzYwMCIKICAgICAgIHgyPSI1My41NzAxMjYiCiAgICAgICB5Mj0iNDcuMzc0MzE3IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0idHJhbnNsYXRlKC0wLjAwMjc2NzYsMC4wMDU5MTM4KSIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50NDk4MSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDQ5ODciCiAgICAgICB4MT0iMjMuOTk1OTg1IgogICAgICAgeTE9IjIwLjEwNTMzNyIKICAgICAgIHgyPSI0MS4wNDc4MzYiCiAgICAgICB5Mj0iMzcuOTU5Nzg1IgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0idHJhbnNsYXRlKDAuMDA0MDE0NjUsMC4wMDU1NzQ4NSkiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDc4OTUiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQ3OTAxIgogICAgICAgeDE9IjE1LjU3ODg3NSIKICAgICAgIHkxPSIxNi4yODUwODgiCiAgICAgICB4Mj0iMzIuMTY2NDA1IgogICAgICAgeTI9IjI4LjM5NDI5MSIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiAvPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQ0OTgxIgogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MjI0MyIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgeDE9IjIzLjk5NTk4NSIKICAgICAgIHkxPSIyMC4xMDUzMzciCiAgICAgICB4Mj0iNDEuMDQ3ODM2IgogICAgICAgeTI9IjM3Ljk1OTc4NSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45ODgzNzMsMC4wMDAwMDAsMC4wMDAwMDAsMC45ODgzNzMsMC4yNzkwMDIsMC4yNzg5ODQpIiAvPgogICAgPHJhZGlhbEdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQyMjQ4IgogICAgICAgaWQ9InJhZGlhbEdyYWRpZW50MjI1NCIKICAgICAgIGN4PSIxNi43NSIKICAgICAgIGN5PSIxMC42NjYzNDQiCiAgICAgICBmeD0iMTYuNzUiCiAgICAgICBmeT0iMTAuNjY2MzQ0IgogICAgICAgcj0iMjEuMjUiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDQuMTU0OTU3LDAsMCwzLjE5ODcyMywtNTIuODQ1NTMsLTE2LjYxODY4KSIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiAvPgogIDwvZGVmcz4KICA8c29kaXBvZGk6bmFtZWR2aWV3CiAgICAgaW5rc2NhcGU6Z3VpZGUtYmJveD0idHJ1ZSIKICAgICBzaG93Z3VpZGVzPSJ0cnVlIgogICAgIGlkPSJiYXNlIgogICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIwLjE1Mjk0MTE4IgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwLjAiCiAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICBpbmtzY2FwZTp6b29tPSI0IgogICAgIGlua3NjYXBlOmN4PSItMzEuNDkyNzI0IgogICAgIGlua3NjYXBlOmN5PSI3LjA1NDQ1NzYiCiAgICAgaW5rc2NhcGU6Y3VycmVudC1sYXllcj0ibGF5ZXIxIgogICAgIHNob3dncmlkPSJmYWxzZSIKICAgICBpbmtzY2FwZTpncmlkLWJib3g9InRydWUiCiAgICAgaW5rc2NhcGU6ZG9jdW1lbnQtdW5pdHM9InB4IgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTkyMCIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxMDE3IgogICAgIGlua3NjYXBlOndpbmRvdy14PSItOCIKICAgICBpbmtzY2FwZTp3aW5kb3cteT0iLTgiCiAgICAgaW5rc2NhcGU6c2hvd3BhZ2VzaGFkb3c9ImZhbHNlIgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiIC8+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhNCI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPgogICAgICAgIDxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PgogICAgICAgIDxkYzp0eXBlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz4KICAgICAgICA8ZGM6dGl0bGUgLz4KICAgICAgICA8ZGM6ZGF0ZT4yMDA1LTEwLTE2PC9kYzpkYXRlPgogICAgICAgIDxkYzpjcmVhdG9yPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+QW5kcmVhcyBOaWxzc29uPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjcmVhdG9yPgogICAgICAgIDxkYzpzdWJqZWN0PgogICAgICAgICAgPHJkZjpCYWc+CiAgICAgICAgICAgIDxyZGY6bGk+c3RvcDwvcmRmOmxpPgogICAgICAgICAgICA8cmRmOmxpPmhhbHQ8L3JkZjpsaT4KICAgICAgICAgICAgPHJkZjpsaT5lcnJvcjwvcmRmOmxpPgogICAgICAgICAgPC9yZGY6QmFnPgogICAgICAgIDwvZGM6c3ViamVjdD4KICAgICAgICA8Y2M6bGljZW5zZQogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvcHVibGljZG9tYWluLyIgLz4KICAgICAgICA8ZGM6Y29udHJpYnV0b3I+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5KYWt1YiBTdGVpbmVyPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjb250cmlidXRvcj4KICAgICAgPC9jYzpXb3JrPgogICAgICA8Y2M6TGljZW5zZQogICAgICAgICByZGY6YWJvdXQ9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL3B1YmxpY2RvbWFpbi8iPgogICAgICAgIDxjYzpwZXJtaXRzCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyNSZXByb2R1Y3Rpb24iIC8+CiAgICAgICAgPGNjOnBlcm1pdHMKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zI0Rpc3RyaWJ1dGlvbiIgLz4KICAgICAgICA8Y2M6cGVybWl0cwogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjRGVyaXZhdGl2ZVdvcmtzIiAvPgogICAgICA8L2NjOkxpY2Vuc2U+CiAgICA8L3JkZjpSREY+CiAgPC9tZXRhZGF0YT4KICA8ZwogICAgIGlkPSJsYXllcjEiCiAgICAgaW5rc2NhcGU6bGFiZWw9IkxheWVyIDEiCiAgICAgaW5rc2NhcGU6Z3JvdXBtb2RlPSJsYXllciI+CiAgICA8ZwogICAgICAgaWQ9Imc1MyI+CiAgICAgIDxwYXRoCiAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0iY2NjY2NjY2NjIgogICAgICAgICBpZD0icGF0aDk0ODAiCiAgICAgICAgIGQ9Ik0gMTUuNTk1MDIxLDIuNDk3NDk2MiBIIDMyLjY4MDMyNiBMIDQ1LjUwMTYsMTUuNTkxOTYgViAzMy40ODU2MDUgTCAzMi44NTMwMDEsNDUuNTAyNTA0IEggMTUuNDIyNjY0IEwgMi40OTg0MDAzLDMyLjY2MzgzOSBWIDE1LjQ2OTY1MyBaIgogICAgICAgICBzdHlsZT0iZmlsbDp1cmwoI2xpbmVhckdyYWRpZW50NDk4Nyk7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiM4NjAwMDA7c3Ryb2tlLXdpZHRoOjE7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIgLz4KICAgICAgPHBhdGgKICAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIKICAgICAgICAgc29kaXBvZGk6bm9kZXR5cGVzPSJjY2NjY2NjY2MiCiAgICAgICAgIGlkPSJwYXRoOTQ4MiIKICAgICAgICAgZD0iTSAxNi4wMTc4ODcsMy41MDYyNTYyIEggMzIuMjQ1Nzk1IEwgNDQuNDkzNjg4LDE1LjkyODYzMSBWIDMzLjA0MjkxNSBMIDMyLjYzNTcwNCw0NC40OTM3NDQgSCAxNS44Njc0ODUgTCAzLjUwNjMxMTYsMzIuMjE0NjMyIFYgMTUuODUxNTI0IFoiCiAgICAgICAgIHN0eWxlPSJvcGFjaXR5OjAuODEzMTg2ODM7ZmlsbDpub25lO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTp1cmwoI2xpbmVhckdyYWRpZW50MjA1Nyk7c3Ryb2tlLXdpZHRoOjEuMDAwMDAwMjQ7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2Utb3BhY2l0eToxIiAvPgogICAgICA8cGF0aAogICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9ImNjY2NjY2NjIgogICAgICAgICBpZD0icGF0aDIyNDEiCiAgICAgICAgIGQ9Ik0gMTUuNjg3NSw3LjY0MDUzMDMgMi43NSwyMC40NTMwMyB2IDE3IGwgMi45Mzc1LDIuOTA2MjUgQyAyMi40NTAwNDEsNDAuNDE2ODI5IDIyLjE2NDY2NSwyNy4zNDA1OTcgNDUuMjUsMjguNDg0MjggViAyMC41NzgwMyBMIDMyLjU2MjUsNy42NDA1MzAzIFoiCiAgICAgICAgIHN0eWxlPSJvcGFjaXR5OjAuMjg5NzcyNzI7ZmlsbDp1cmwoI3JhZGlhbEdyYWRpZW50MjI1NCk7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjE7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIgLz4KICAgIDwvZz4KICA8L2c+Cjwvc3ZnPgo=
"""
ok_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjY0cHgiCiAgIGhlaWdodD0iNjRweCIKICAgaWQ9InN2ZzI5ODAiCiAgIHNvZGlwb2RpOnZlcnNpb249IjAuMzIiCiAgIGlua3NjYXBlOnZlcnNpb249IjAuOTIuMSByMTUzNzEiCiAgIHNvZGlwb2RpOmRvY25hbWU9Im9rLnN2ZyIKICAgaW5rc2NhcGU6b3V0cHV0X2V4dGVuc2lvbj0ib3JnLmlua3NjYXBlLm91dHB1dC5zdmcuaW5rc2NhcGUiCiAgIHZlcnNpb249IjEuMSI+CiAgPGRlZnMKICAgICBpZD0iZGVmczI5ODIiPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODA1Ij4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzRlOWEwNjtzdG9wLW9wYWNpdHk6MSIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDM4MDciIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM4YWUyMzQ7c3RvcC1vcGFjaXR5OjEiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3AzODA5IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50Mzg2NCI+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzg2NiIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNzFiMmY4O3N0b3Atb3BhY2l0eToxOyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzODY4IgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDI3OTU7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxyYWRpYWxHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50Mzg2NCIKICAgICAgIGlkPSJyYWRpYWxHcmFkaWVudDM4NTAiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC42MDI4NDU5LDEuMDQ3MTYzOSwtMS45Nzk0MDIxLDEuMTM5NTI5NSwxMjcuOTU4OCwtNzQuNDU2OTA3KSIKICAgICAgIGN4PSI1MS4zMjg4OTIiCiAgICAgICBjeT0iMzEuMDc0MTQ2IgogICAgICAgZng9IjUxLjMyODg5MiIKICAgICAgIGZ5PSIzMS4wNzQxNDYiCiAgICAgICByPSIxOS41NzE0MjgiIC8+CiAgICA8aW5rc2NhcGU6cGVyc3BlY3RpdmUKICAgICAgIHNvZGlwb2RpOnR5cGU9Imlua3NjYXBlOnBlcnNwM2QiCiAgICAgICBpbmtzY2FwZTp2cF94PSIwIDogMzIgOiAxIgogICAgICAgaW5rc2NhcGU6dnBfeT0iMCA6IDEwMDAgOiAwIgogICAgICAgaW5rc2NhcGU6dnBfej0iNjQgOiAzMiA6IDEiCiAgICAgICBpbmtzY2FwZTpwZXJzcDNkLW9yaWdpbj0iMzIgOiAyMS4zMzMzMzMgOiAxIgogICAgICAgaWQ9InBlcnNwZWN0aXZlMjk4OCIgLz4KICAgIDxyYWRpYWxHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50Mzg2NCIKICAgICAgIGlkPSJyYWRpYWxHcmFkaWVudDMwNzYiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC41ODAxOTQyMSwxLjAwNzgxNzEsLTEuOTA1MDI2OSwxLjA5NjcxMjEsNTkuMjg2NTEyLC0xOTcuODE3NDcpIgogICAgICAgY3g9IjUxLjMyODg5MiIKICAgICAgIGN5PSIzMS4wNzQxNDYiCiAgICAgICBmeD0iNTEuMzI4ODkyIgogICAgICAgZnk9IjMxLjA3NDE0NiIKICAgICAgIHI9IjE5LjU3MTQyOCIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MzgwNSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDM4MTEiCiAgICAgICB4MT0iNDkuMDU4ODIzIgogICAgICAgeTE9IjYwLjgyMzUyOCIKICAgICAgIHgyPSIzNC45NDExNzciCiAgICAgICB5Mj0iMjMuMTc2NDciCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC44NSwwLDAsMC44NSw2Ni4zLDYuMzAwMDAwMSkiIC8+CiAgPC9kZWZzPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICBpZD0iYmFzZSIKICAgICBwYWdlY29sb3I9IiNmZmZmZmYiCiAgICAgYm9yZGVyY29sb3I9IiM2NjY2NjYiCiAgICAgYm9yZGVyb3BhY2l0eT0iMS4wIgogICAgIGlua3NjYXBlOnBhZ2VvcGFjaXR5PSIwLjAiCiAgICAgaW5rc2NhcGU6cGFnZXNoYWRvdz0iMiIKICAgICBpbmtzY2FwZTp6b29tPSI1Ljc3MDYwMzEiCiAgICAgaW5rc2NhcGU6Y3g9Ii0xMy44NjMyNjQiCiAgICAgaW5rc2NhcGU6Y3k9IjIyLjAzNzA4NSIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJsYXllcjEiCiAgICAgc2hvd2dyaWQ9InRydWUiCiAgICAgaW5rc2NhcGU6ZG9jdW1lbnQtdW5pdHM9InB4IgogICAgIGlua3NjYXBlOmdyaWQtYmJveD0idHJ1ZSIKICAgICBpbmtzY2FwZTp3aW5kb3ctd2lkdGg9IjE5MjAiCiAgICAgaW5rc2NhcGU6d2luZG93LWhlaWdodD0iMTAxNyIKICAgICBpbmtzY2FwZTp3aW5kb3cteD0iLTgiCiAgICAgaW5rc2NhcGU6d2luZG93LXk9Ii04IgogICAgIGlua3NjYXBlOndpbmRvdy1tYXhpbWl6ZWQ9IjEiCiAgICAgaW5rc2NhcGU6c25hcC1nbG9iYWw9InRydWUiCiAgICAgaW5rc2NhcGU6c25hcC1iYm94PSJ0cnVlIj4KICAgIDxpbmtzY2FwZTpncmlkCiAgICAgICB0eXBlPSJ4eWdyaWQiCiAgICAgICBpZD0iZ3JpZDI5OTEiCiAgICAgICBlbXBzcGFjaW5nPSIyIgogICAgICAgdmlzaWJsZT0idHJ1ZSIKICAgICAgIGVuYWJsZWQ9InRydWUiCiAgICAgICBzbmFwdmlzaWJsZWdyaWRsaW5lc29ubHk9InRydWUiIC8+CiAgPC9zb2RpcG9kaTpuYW1lZHZpZXc+CiAgPG1ldGFkYXRhCiAgICAgaWQ9Im1ldGFkYXRhMjk4NSI+CiAgICA8cmRmOlJERj4KICAgICAgPGNjOldvcmsKICAgICAgICAgcmRmOmFib3V0PSIiPgogICAgICAgIDxkYzpmb3JtYXQ+aW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PgogICAgICAgIDxkYzp0eXBlCiAgICAgICAgICAgcmRmOnJlc291cmNlPSJodHRwOi8vcHVybC5vcmcvZGMvZGNtaXR5cGUvU3RpbGxJbWFnZSIgLz4KICAgICAgICA8ZGM6dGl0bGUgLz4KICAgICAgICA8ZGM6Y3JlYXRvcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPltZb3JpayB2YW4gSGF2cmVdPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjcmVhdG9yPgogICAgICAgIDxkYzp0aXRsZT5BcmNoX0NoZWNrPC9kYzp0aXRsZT4KICAgICAgICA8ZGM6ZGF0ZT4yMDEyLTA3LTIyPC9kYzpkYXRlPgogICAgICAgIDxkYzpyZWxhdGlvbj5odHRwOi8vd3d3LmZyZWVjYWR3ZWIub3JnL3dpa2kvaW5kZXgucGhwP3RpdGxlPUFydHdvcms8L2RjOnJlbGF0aW9uPgogICAgICAgIDxkYzpwdWJsaXNoZXI+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5GcmVlQ0FEPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpwdWJsaXNoZXI+CiAgICAgICAgPGRjOmlkZW50aWZpZXI+RnJlZUNBRC9zcmMvTW9kL0FyY2gvUmVzb3VyY2VzL2ljb25zL0FyY2hfQ2hlY2suc3ZnPC9kYzppZGVudGlmaWVyPgogICAgICAgIDxkYzpyaWdodHM+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5GcmVlQ0FEIExHUEwyKzwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6cmlnaHRzPgogICAgICAgIDxjYzpsaWNlbnNlPmh0dHBzOi8vd3d3LmdudS5vcmcvY29weWxlZnQvbGVzc2VyLmh0bWw8L2NjOmxpY2Vuc2U+CiAgICAgICAgPGRjOmNvbnRyaWJ1dG9yPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+W2Fncnlzb25dIEFsZXhhbmRlciBHcnlzb248L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOmNvbnRyaWJ1dG9yPgogICAgICA8L2NjOldvcms+CiAgICA8L3JkZjpSREY+CiAgPC9tZXRhZGF0YT4KICA8ZwogICAgIGlkPSJsYXllcjEiCiAgICAgaW5rc2NhcGU6bGFiZWw9IkxheWVyIDEiCiAgICAgaW5rc2NhcGU6Z3JvdXBtb2RlPSJsYXllciI+CiAgICA8ZwogICAgICAgaWQ9ImczNzA4IgogICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMS40MTAxNTYyLDAsMCwxLjQxMDE1NjIsLTExMS44MzU5NCwtMjcuMjI2NTYyKSI+CiAgICAgIDxjaXJjbGUKICAgICAgICAgcj0iMTkiCiAgICAgICAgIGN5PSI0MiIKICAgICAgICAgY3g9IjEwMiIKICAgICAgICAgaWQ9InBhdGgzNzg1IgogICAgICAgICBzdHlsZT0iZmlsbDojNzNkMjE2O2ZpbGwtb3BhY2l0eToxO3N0cm9rZTojMTcyYTA0O3N0cm9rZS13aWR0aDoyO3N0cm9rZS1saW5lY2FwOnNxdWFyZTtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6MC42MDAwMDAwMjtzdHJva2Utb3BhY2l0eToxIiAvPgogICAgICA8Y2lyY2xlCiAgICAgICAgIHI9IjE3IgogICAgICAgICBjeT0iNDIiCiAgICAgICAgIGN4PSIxMDIiCiAgICAgICAgIGlkPSJwYXRoMzc4NS0zIgogICAgICAgICBzdHlsZT0iZmlsbDp1cmwoI2xpbmVhckdyYWRpZW50MzgxMSk7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOiM4YWUyMzQ7c3Ryb2tlLXdpZHRoOjI7c3Ryb2tlLWxpbmVjYXA6c3F1YXJlO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2UtZGFzaG9mZnNldDowLjYwMDAwMDAyO3N0cm9rZS1vcGFjaXR5OjEiIC8+CiAgICAgIDxwYXRoCiAgICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0iY2NjY2NjYyIKICAgICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIKICAgICAgICAgaWQ9InBhdGgzODEzIgogICAgICAgICBkPSJtIDkxLDQ1IDQsLTQgNCw0IDEyLC0xMiA0LDQgLTE2LDE2IHoiCiAgICAgICAgIHN0eWxlPSJmaWxsOiNmZmZmZmY7c3Ryb2tlOiMxNzJhMDQ7c3Ryb2tlLXdpZHRoOjI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW9wYWNpdHk6MSIgLz4KICAgIDwvZz4KICA8L2c+Cjwvc3ZnPgo=
"""
add_block_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgeG1sbnM6c29kaXBvZGk9Imh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkIgogICB4bWxuczppbmtzY2FwZT0iaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZSIKICAgd2lkdGg9IjY0cHgiCiAgIGhlaWdodD0iNjRweCIKICAgaWQ9InN2ZzI4MjEiCiAgIHNvZGlwb2RpOnZlcnNpb249IjAuMzIiCiAgIGlua3NjYXBlOnZlcnNpb249IjAuOTIuMSByMTUzNzEiCiAgIHNvZGlwb2RpOmRvY25hbWU9ImFkZC1ibG9jay15LnN2ZyIKICAgaW5rc2NhcGU6b3V0cHV0X2V4dGVuc2lvbj0ib3JnLmlua3NjYXBlLm91dHB1dC5zdmcuaW5rc2NhcGUiCiAgIHZlcnNpb249IjEuMSI+CiAgPGRlZnMKICAgICBpZD0iZGVmczI4MjMiPgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpbmtzY2FwZTpjb2xsZWN0PSJhbHdheXMiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODAxIj4KICAgICAgPHN0b3AKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I2M0YTAwMDtzdG9wLW9wYWNpdHk6MSIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBpZD0ic3RvcDM4MDMiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmY2U5NGY7c3RvcC1vcGFjaXR5OjEiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3AzODA1IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxyYWRpYWxHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MzM3NyIKICAgICAgIGlkPSJyYWRpYWxHcmFkaWVudDM3MDEiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGN4PSI4NC44ODMzMjQiCiAgICAgICBjeT0iNzcuMDQyODQ3IgogICAgICAgZng9Ijg0Ljg4MzMyNCIKICAgICAgIGZ5PSI3Ny4wNDI4NDciCiAgICAgICByPSIxOS40Njc0MzYiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDIuODQ5MjQyMSwxLjI1ODUxMTksLTAuNDA0MDQxNSwwLjkxNDc0MDcsLTEyNS44NDEzMSwtMTAwLjI1ODA1KSIgLz4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MzM3NyI+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzM3OSIKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojZmFmZjJiO3N0b3Atb3BhY2l0eToxOyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzMzgxIgogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmFhMDA7c3RvcC1vcGFjaXR5OjE7IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxyYWRpYWxHcmFkaWVudAogICAgICAgaW5rc2NhcGU6Y29sbGVjdD0iYWx3YXlzIgogICAgICAgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MzM3NyIKICAgICAgIGlkPSJyYWRpYWxHcmFkaWVudDM2OTkiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIGN4PSI3Ni4zODMzMzEiCiAgICAgICBjeT0iOTQuMzY5NTY4IgogICAgICAgZng9Ijc2LjM4MzMzMSIKICAgICAgIGZ5PSI5NC4zNjk1NjgiCiAgICAgICByPSIxOS40Njc0MzYiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTgxODk0MywwLjE4OTQyOTUsLTAuNDEwOTQyNywyLjEzMDA5MjQsNDAuMTYzNDUzLC0xMjEuMTE1NTkpIiAvPgogICAgPGlua3NjYXBlOnBlcnNwZWN0aXZlCiAgICAgICBzb2RpcG9kaTp0eXBlPSJpbmtzY2FwZTpwZXJzcDNkIgogICAgICAgaW5rc2NhcGU6dnBfeD0iMCA6IDMyIDogMSIKICAgICAgIGlua3NjYXBlOnZwX3k9IjAgOiAxMDAwIDogMCIKICAgICAgIGlua3NjYXBlOnZwX3o9IjY0IDogMzIgOiAxIgogICAgICAgaW5rc2NhcGU6cGVyc3AzZC1vcmlnaW49IjMyIDogMjEuMzMzMzMzIDogMSIKICAgICAgIGlkPSJwZXJzcGVjdGl2ZTI4MjkiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDM4MDEiCiAgICAgICBpZD0ibGluZWFyR3JhZGllbnQzODA3IgogICAgICAgeDE9IjExMCIKICAgICAgIHkxPSIzNSIKICAgICAgIHgyPSI4NSIKICAgICAgIHkyPSIzNSIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgc3ByZWFkTWV0aG9kPSJyZWZsZWN0IgogICAgICAgZ3JhZGllbnRUcmFuc2Zvcm09InRyYW5zbGF0ZSgtNjIsMCkiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDM4MDEtNSIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDM4MDctNyIKICAgICAgIHgxPSIxMTAiCiAgICAgICB5MT0iMzUiCiAgICAgICB4Mj0iODUiCiAgICAgICB5Mj0iMzUiCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIHNwcmVhZE1ldGhvZD0icmVmbGVjdCIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTYyLC0xNikiIC8+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlua3NjYXBlOmNvbGxlY3Q9ImFsd2F5cyIKICAgICAgIGlkPSJsaW5lYXJHcmFkaWVudDM4MDEtNSI+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNjNGEwMDA7c3RvcC1vcGFjaXR5OjEiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgaWQ9InN0b3AzODAzLTMiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNmY2U5NGY7c3RvcC1vcGFjaXR5OjEiCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgaWQ9InN0b3AzODA1LTUiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPHBhdHRlcm4KICAgICAgIHk9IjAiCiAgICAgICB4PSIwIgogICAgICAgaGVpZ2h0PSI2IgogICAgICAgd2lkdGg9IjYiCiAgICAgICBwYXR0ZXJuVW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgaWQ9IkVNRmhiYXNlcGF0dGVybiIgLz4KICA8L2RlZnM+CiAgPHNvZGlwb2RpOm5hbWVkdmlldwogICAgIGlkPSJiYXNlIgogICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIxLjAiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAuMCIKICAgICBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIgogICAgIGlua3NjYXBlOnpvb209IjMuNjA0MDAzOSIKICAgICBpbmtzY2FwZTpjeD0iLTczLjg3OTM5OSIKICAgICBpbmtzY2FwZTpjeT0iMjYuMDE4MDQyIgogICAgIGlua3NjYXBlOmN1cnJlbnQtbGF5ZXI9ImxheWVyMSIKICAgICBzaG93Z3JpZD0idHJ1ZSIKICAgICBpbmtzY2FwZTpkb2N1bWVudC11bml0cz0icHgiCiAgICAgaW5rc2NhcGU6Z3JpZC1iYm94PSJ0cnVlIgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMTkyMCIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxMDE3IgogICAgIGlua3NjYXBlOndpbmRvdy14PSItOCIKICAgICBpbmtzY2FwZTp3aW5kb3cteT0iLTgiCiAgICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSI+CiAgICA8aW5rc2NhcGU6Z3JpZAogICAgICAgdHlwZT0ieHlncmlkIgogICAgICAgaWQ9ImdyaWQyOTkyIgogICAgICAgZW1wc3BhY2luZz0iMiIKICAgICAgIHZpc2libGU9InRydWUiCiAgICAgICBlbmFibGVkPSJ0cnVlIgogICAgICAgc25hcHZpc2libGVncmlkbGluZXNvbmx5PSJ0cnVlIiAvPgogIDwvc29kaXBvZGk6bmFtZWR2aWV3PgogIDxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTI4MjYiPgogICAgPHJkZjpSREY+CiAgICAgIDxjYzpXb3JrCiAgICAgICAgIHJkZjphYm91dD0iIj4KICAgICAgICA8ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD4KICAgICAgICA8ZGM6dHlwZQogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgICAgPGRjOmNyZWF0b3I+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5bd21heWVyXTwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6Y3JlYXRvcj4KICAgICAgICA8ZGM6dGl0bGU+PC9kYzp0aXRsZT4KICAgICAgICA8ZGM6ZGF0ZT4yMDExLTEwLTEwPC9kYzpkYXRlPgogICAgICAgIDxkYzpyZWxhdGlvbj5odHRwOi8vd3d3LmZyZWVjYWR3ZWIub3JnL3dpa2kvaW5kZXgucGhwP3RpdGxlPUFydHdvcms8L2RjOnJlbGF0aW9uPgogICAgICAgIDxkYzpwdWJsaXNoZXI+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5GcmVlQ0FEPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpwdWJsaXNoZXI+CiAgICAgICAgPGRjOmlkZW50aWZpZXI+RnJlZUNBRC9zcmMvTW9kL1BhcnQvR3VpL1Jlc291cmNlcy9pY29ucy9QYXJ0X0N5bGluZGVyLnN2ZzwvZGM6aWRlbnRpZmllcj4KICAgICAgICA8ZGM6cmlnaHRzPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+RnJlZUNBRCBMR1BMMis8L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOnJpZ2h0cz4KICAgICAgICA8Y2M6bGljZW5zZT5odHRwczovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2xlc3Nlci5odG1sPC9jYzpsaWNlbnNlPgogICAgICAgIDxkYzpjb250cmlidXRvcj4KICAgICAgICAgIDxjYzpBZ2VudD4KICAgICAgICAgICAgPGRjOnRpdGxlPlthZ3J5c29uXSBBbGV4YW5kZXIgR3J5c29uPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjb250cmlidXRvcj4KICAgICAgPC9jYzpXb3JrPgogICAgPC9yZGY6UkRGPgogIDwvbWV0YWRhdGE+CiAgPGcKICAgICBpZD0ibGF5ZXIxIgogICAgIGlua3NjYXBlOmxhYmVsPSJMYXllciAxIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiPgogICAgPHBhdGgKICAgICAgIHN0eWxlPSJmaWxsOiNmY2U5NGY7c3Ryb2tlOiMzMDJiMDA7c3Ryb2tlLXdpZHRoOjEuOTk5OTk5ODg7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjQuNTtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNob2Zmc2V0OjIwLjQiCiAgICAgICBkPSJtIDU1LjAwMDAwMSw1MyBjIDAsNC40MTgyNzggLTEwLjc0NTE2Niw4IC0yNCw4IEMgMTcuNzQ1MTY4LDYxIDcuMDAwMDAyLDU3LjQxODI3OCA3LjAwMDAwMiw1MyBMIDcsMTEgNTQuOTk5OTk5LDExIHoiCiAgICAgICBpZD0icGF0aDI5OTQtMyIKICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9InNzY2NjcyIgLz4KICAgIDxwYXRoCiAgICAgICBzdHlsZT0iZmlsbDp1cmwoI2xpbmVhckdyYWRpZW50MzgwNyk7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOiNmY2U5NGY7c3Ryb2tlLXdpZHRoOjI7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjQuNTtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNob2Zmc2V0OjIwLjQiCiAgICAgICBkPSJNIDUzLDUxLjcyNzI3MyBDIDUzLDU1Ljc0Mzg4OSA0My4xNTAyNyw1OSAzMSw1OSAxOC44NDk3MzYsNTkgOS4wMDAwMDEsNTUuNzQzODg5IDkuMDAwMDAxLDUxLjcyNzI3MyBsIC0yZS02LC0zOCA0NC4wMDAwMDEsMCB6IgogICAgICAgaWQ9InBhdGgyOTk0LTMtNiIKICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9InNzY2NjcyIgLz4KICAgIDxwYXRoCiAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojZmNlOTRmO3N0cm9rZS13aWR0aDoyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDo0LjU7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtZGFzaG9mZnNldDoyMC40IgogICAgICAgZD0iTSA1MywxNS43MjcyNzMgQyA1MSwxOSA0My4xNTAyNywyMSAzMSwyMSAxOC44NDk3MzYsMjEgMTIsMTkgOS4wMDAwMDEsMTUuNzI3MjczIgogICAgICAgaWQ9InBhdGgyOTk0LTMtNi05IgogICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIKICAgICAgIHNvZGlwb2RpOm5vZGV0eXBlcz0iY3NjIiAvPgogICAgPHBhdGgKICAgICAgIHNvZGlwb2RpOnR5cGU9ImFyYyIKICAgICAgIHN0eWxlPSJmaWxsOiNmY2U5NGY7c3Ryb2tlOiMzMDJiMDA7c3Ryb2tlLXdpZHRoOjEuNzU7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjQuNTtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2UtZGFzaG9mZnNldDoyMC40IgogICAgICAgaWQ9InBhdGgyOTk0IgogICAgICAgc29kaXBvZGk6Y3g9Ii0zNSIKICAgICAgIHNvZGlwb2RpOmN5PSIyNSIKICAgICAgIHNvZGlwb2RpOnJ4PSIyMSIKICAgICAgIHNvZGlwb2RpOnJ5PSI3IgogICAgICAgZD0ibSAtMTQsMjUgYSAyMSw3IDAgMSAxIC00MiwwIDIxLDcgMCAxIDEgNDIsMCB6IgogICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMS4xNDI4NTcxLDAsMCwxLjE0Mjg1NzEsNzEsLTE3LjU3MTQyOCkiIC8+CiAgICA8cGF0aAogICAgICAgaWQ9InBhdGgyOSIKICAgICAgIGQ9Ik0gNDAuOTYwMTExLDcuMDQwMTExIFYgMzcuMDM5ODg5IgogICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6IzJlMzQzNjtzdHJva2Utd2lkdGg6Ny45OTk5NDA4N3B4O3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz4KICAgIDxwYXRoCiAgICAgICBpZD0icGF0aDMxIgogICAgICAgZD0iTSA1NiwyMiBIIDI2LjAwMDIyMiIKICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiMyZTM0MzY7c3Ryb2tlLXdpZHRoOjcuOTk5OTQwODdweDtzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+CiAgICA8cGF0aAogICAgICAgaWQ9InBhdGgzMyIKICAgICAgIGQ9Ik0gNDAuOTYwMTExLDcuMDQwMTExIFYgMzcuMDM5ODg5IgogICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6I2QzZDdjZjtzdHJva2Utd2lkdGg6My45OTk5NzA0NHB4O3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz4KICAgIDxwYXRoCiAgICAgICBpZD0icGF0aDM1IgogICAgICAgZD0iTSA1NiwyMiBIIDI2LjAwMDIyMiIKICAgICAgIHN0eWxlPSJmaWxsOm5vbmU7c3Ryb2tlOiNkM2Q3Y2Y7c3Ryb2tlLXdpZHRoOjMuOTk5OTcwNDRweDtzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLW9wYWNpdHk6MSIKICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiIC8+CiAgICA8cGF0aAogICAgICAgaWQ9InBhdGgzNyIKICAgICAgIGQ9Ik0gNTYsMjEuMDQwMDA3IEggMjYuMDAwMjIyIgogICAgICAgc3R5bGU9ImZpbGw6bm9uZTtzdHJva2U6I2ZmZmZmZjtzdHJva2Utd2lkdGg6MS45OTk5ODUyMnB4O3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2Utb3BhY2l0eToxIgogICAgICAgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT0iMCIgLz4KICAgIDxwYXRoCiAgICAgICBpZD0icGF0aDM5IgogICAgICAgZD0iTSA0MC4wMDAxMTgsNy4wNDAxMTEgViAzNy4wMzk4ODkiCiAgICAgICBzdHlsZT0iZmlsbDpub25lO3N0cm9rZTojZmZmZmZmO3N0cm9rZS13aWR0aDoxLjk5OTk4NTIycHg7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1vcGFjaXR5OjEiCiAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIiAvPgogIDwvZz4KPC9zdmc+Cg==
"""
minimize_b64=\
"""
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhLS0gQ3JlYXRlZCB3aXRoIElua3NjYXBlIChodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy8pIC0tPgoKPHN2ZwogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiCiAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICB3aWR0aD0iNjRweCIKICAgaGVpZ2h0PSI2NHB4IgogICBpZD0ic3ZnMjk4NSIKICAgdmVyc2lvbj0iMS4xIgogICBpbmtzY2FwZTp2ZXJzaW9uPSIwLjQ4LjQgcjk5MzkiCiAgIHNvZGlwb2RpOmRvY25hbWU9Im1pbmltaXplLnN2ZyI+CiAgPGRlZnMKICAgICBpZD0iZGVmczI5ODciIC8+CiAgPHNvZGlwb2RpOm5hbWVkdmlldwogICAgIGlkPSJiYXNlIgogICAgIHBhZ2Vjb2xvcj0iI2ZmZmZmZiIKICAgICBib3JkZXJjb2xvcj0iIzY2NjY2NiIKICAgICBib3JkZXJvcGFjaXR5PSIxLjAiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAuMCIKICAgICBpbmtzY2FwZTpwYWdlc2hhZG93PSIyIgogICAgIGlua3NjYXBlOnpvb209IjUuMDk2ODMxMiIKICAgICBpbmtzY2FwZTpjeD0iLTU5Ljk3Mjg4NSIKICAgICBpbmtzY2FwZTpjeT0iMTYuMTkzNDEzIgogICAgIGlua3NjYXBlOmN1cnJlbnQtbGF5ZXI9ImxheWVyMSIKICAgICBzaG93Z3JpZD0idHJ1ZSIKICAgICBpbmtzY2FwZTpkb2N1bWVudC11bml0cz0icHgiCiAgICAgaW5rc2NhcGU6Z3JpZC1iYm94PSJ0cnVlIgogICAgIGlua3NjYXBlOndpbmRvdy13aWR0aD0iMjU2MCIKICAgICBpbmtzY2FwZTp3aW5kb3ctaGVpZ2h0PSIxMzYxIgogICAgIGlua3NjYXBlOndpbmRvdy14PSItOSIKICAgICBpbmtzY2FwZTp3aW5kb3cteT0iLTkiCiAgICAgaW5rc2NhcGU6d2luZG93LW1heGltaXplZD0iMSIKICAgICBpbmtzY2FwZTpzbmFwLWJib3g9InRydWUiCiAgICAgaW5rc2NhcGU6c25hcC1ub2Rlcz0iZmFsc2UiPgogICAgPGlua3NjYXBlOmdyaWQKICAgICAgIHR5cGU9Inh5Z3JpZCIKICAgICAgIGlkPSJncmlkMjk4NyIKICAgICAgIGVtcHNwYWNpbmc9IjIiCiAgICAgICB2aXNpYmxlPSJ0cnVlIgogICAgICAgZW5hYmxlZD0idHJ1ZSIKICAgICAgIHNuYXB2aXNpYmxlZ3JpZGxpbmVzb25seT0idHJ1ZSIgLz4KICA8L3NvZGlwb2RpOm5hbWVkdmlldz4KICA8bWV0YWRhdGEKICAgICBpZD0ibWV0YWRhdGEyOTkwIj4KICAgIDxyZGY6UkRGPgogICAgICA8Y2M6V29yawogICAgICAgICByZGY6YWJvdXQ9IiI+CiAgICAgICAgPGRjOmZvcm1hdD5pbWFnZS9zdmcreG1sPC9kYzpmb3JtYXQ+CiAgICAgICAgPGRjOnR5cGUKICAgICAgICAgICByZGY6cmVzb3VyY2U9Imh0dHA6Ly9wdXJsLm9yZy9kYy9kY21pdHlwZS9TdGlsbEltYWdlIiAvPgogICAgICAgIDxkYzp0aXRsZSAvPgogICAgICAgIDxkYzpjcmVhdG9yPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+W3lvcmlrdmFuaGF2cmVdPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpjcmVhdG9yPgogICAgICAgIDxkYzp0aXRsZT5BcmNoX1NlY3Rpb25QbGFuZV9UcmVlPC9kYzp0aXRsZT4KICAgICAgICA8ZGM6ZGF0ZT4yMDExLTEyLTA2PC9kYzpkYXRlPgogICAgICAgIDxkYzpyZWxhdGlvbj5odHRwOi8vd3d3LmZyZWVjYWR3ZWIub3JnL3dpa2kvaW5kZXgucGhwP3RpdGxlPUFydHdvcms8L2RjOnJlbGF0aW9uPgogICAgICAgIDxkYzpwdWJsaXNoZXI+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5GcmVlQ0FEPC9kYzp0aXRsZT4KICAgICAgICAgIDwvY2M6QWdlbnQ+CiAgICAgICAgPC9kYzpwdWJsaXNoZXI+CiAgICAgICAgPGRjOmlkZW50aWZpZXI+RnJlZUNBRC9zcmMvTW9kL0FyY2gvUmVzb3VyY2VzL2ljb25zL0FyY2hfU2VjdGlvblBsYW5lX1RyZWUuc3ZnPC9kYzppZGVudGlmaWVyPgogICAgICAgIDxkYzpyaWdodHM+CiAgICAgICAgICA8Y2M6QWdlbnQ+CiAgICAgICAgICAgIDxkYzp0aXRsZT5GcmVlQ0FEIExHUEwyKzwvZGM6dGl0bGU+CiAgICAgICAgICA8L2NjOkFnZW50PgogICAgICAgIDwvZGM6cmlnaHRzPgogICAgICAgIDxjYzpsaWNlbnNlPmh0dHBzOi8vd3d3LmdudS5vcmcvY29weWxlZnQvbGVzc2VyLmh0bWw8L2NjOmxpY2Vuc2U+CiAgICAgICAgPGRjOmNvbnRyaWJ1dG9yPgogICAgICAgICAgPGNjOkFnZW50PgogICAgICAgICAgICA8ZGM6dGl0bGU+W2Fncnlzb25dIEFsZXhhbmRlciBHcnlzb248L2RjOnRpdGxlPgogICAgICAgICAgPC9jYzpBZ2VudD4KICAgICAgICA8L2RjOmNvbnRyaWJ1dG9yPgogICAgICA8L2NjOldvcms+CiAgICA8L3JkZjpSREY+CiAgPC9tZXRhZGF0YT4KICA8ZwogICAgIGlkPSJsYXllcjEiCiAgICAgaW5rc2NhcGU6bGFiZWw9IkxheWVyIDEiCiAgICAgaW5rc2NhcGU6Z3JvdXBtb2RlPSJsYXllciI+CiAgICA8cGF0aAogICAgICAgc29kaXBvZGk6dHlwZT0ic3RhciIKICAgICAgIHN0eWxlPSJjb2xvcjojMDAwMDAwO2ZpbGw6Izk5OTk5OTtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6IzRkNGQ0ZDtzdHJva2Utd2lkdGg6MS41NzQ4ODIyNztzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjA7bWFya2VyOm5vbmU7dmlzaWJpbGl0eTp2aXNpYmxlO2Rpc3BsYXk6aW5saW5lO292ZXJmbG93OnZpc2libGU7ZW5hYmxlLWJhY2tncm91bmQ6YWNjdW11bGF0ZSIKICAgICAgIGlkPSJwYXRoMjk5NyIKICAgICAgIHNvZGlwb2RpOnNpZGVzPSIzIgogICAgICAgc29kaXBvZGk6Y3g9IjIyIgogICAgICAgc29kaXBvZGk6Y3k9IjE3LjA5MDkwOCIKICAgICAgIHNvZGlwb2RpOnIxPSIyMC40MzI1MTIiCiAgICAgICBzb2RpcG9kaTpyMj0iMTAuMjE2MjU3IgogICAgICAgc29kaXBvZGk6YXJnMT0iMi4wOTQzOTUxIgogICAgICAgc29kaXBvZGk6YXJnMj0iMy4xNDE1OTI3IgogICAgICAgaW5rc2NhcGU6ZmxhdHNpZGVkPSJ0cnVlIgogICAgICAgaW5rc2NhcGU6cm91bmRlZD0iMCIKICAgICAgIGlua3NjYXBlOnJhbmRvbWl6ZWQ9IjAiCiAgICAgICBkPSJtIDExLjc4Mzc0NCwzNC43ODU5ODMgMCwtMzUuMzkwMTQ5NjMgMzAuNjQ4NzY4LDE3LjY5NTA3NDYzIHoiCiAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLDAuNTk3OTI3MDMsMS4xNDcyNDA3LDAsMTIuMzkyNjE0LDIxLjYwNjM2NCkiCiAgICAgICBpbmtzY2FwZTp0cmFuc2Zvcm0tY2VudGVyLXk9IjMuMDU0Mjg1NyIgLz4KICA8L2c+Cjwvc3ZnPgo=
"""

export3DStep_b64=\
"""
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
"""

pcb_edge_b64=\
"""

"""

from sys import platform as _platform

# window GUI dimensions parameters
pt_lnx=FALSE

if _platform == "linux" or _platform == "linux2":
   # linux
   pt_lnx=True
   sizeXmin=172;sizeYmin=34+34
   sizeX=172;sizeY=516 #536
   sizeXright=172;sizeYright=536 #556
else:
    sizeXmin=172;sizeYmin=34
    sizeX=172;sizeY=482#502
    sizeXright=172;sizeYright=502#522
if _platform == "darwin":
    pt_osx=True
##   # MAC OS X
##elif _platform == "win32":
##   # Windows
#sizeXmin=172;sizeYmin=30+34
sizeXMax=487 #487 
btn_sizeX=32;btn_sizeY=32;
chkb_sizeX=20;chkb_sizeY=20;
btn_sm_sizeX=20;btn_sm_sizeY=20;
btn_md_sizeX=26;btn_md_sizeY=26;



def close_ksu():
    #def closeEvent(self, e):
    spc="""<font color='white'>****************************************************************************</font><br>"""
    msg="""<b>Do you want to quit?</b>
        <i>Have you saved your STEP artwork?</i><br>
        """
    #confirm on exit
    QtGui.QApplication.restoreOverrideCursor()
    #self.setGeometry(25, 250, 500, 500)
    #self.setWindowState(QtCore.Qt.WindowMinimized)
    res=''
    if test_flag_exit==False:
        QtGui.QApplication.restoreOverrideCursor()
        res = QtGui.QMessageBox.question(None,"Close",msg,QtGui.QMessageBox.Yes|QtGui.QMessageBox.No)
    if res is not QtGui.QMessageBox.No:
        #e.ignore()
        # KSUWidget.close()
        KSUWidget.deleteLater()
        #self.setWindowState(QtCore.Qt.WindowActive)
    doc=FreeCAD.ActiveDocument
    if doc is not None:
        FreeCAD.setActiveDocument(doc.Name)
    #FreeCAD.ActiveDocument=FreeCAD.getDocument(doc.Label)
    #FreeCADGui.ActiveDocument=FreeCADGui.getDocument(doc.Label)
        if close_doc==True:
            FreeCAD.closeDocument(doc.Name)
        say(doc.Label)
##
def tabify():
    #global KSUWidget

    KSUWidget.setFloating(False)  #dock
    KSUWidget.resize(sizeX,sizeY)
    KSUWidget.activateWindow()
    KSUWidget.raise_()
    t=FreeCADGui.getMainWindow()
    cv = t.findChild(QtGui.QDockWidget, "Combo View")
    if KSUWidget and cv:
        dw=t.findChildren(QtGui.QDockWidget)
        try:
            t.tabifyDockWidget(cv,KSUWidget)                
        except:
            pass
        k_tab = t.findChild(QtGui.QDockWidget, "kicadStepUp") #"kicad StepUp 3D tools")
        k_tab.activateWindow()
        k_tab.raise_()
        KSUWidget.showMaximized()
        KSUWidget.activateWindow()
        KSUWidget.raise_()
        say( "Tabified done !")               
        ksu_tab = t.findChild(QtGui.QDockWidget, "kicadStepUp") #"kicad StepUp 3D tools")
        if ksu_tab:
            #say ("ksu tab ->"+ksu_tab.objectName())
            KSUWidget.resize(sizeX,sizeY)
            ksu_tab.activateWindow()
            ksu_tab.raise_()
        #say ("focus on me!")
    
def dock():
    global expanded_view, mingui
    expanded_view=0; mingui=0
    #KSUmw = FreeCADGui.getMainWindow()                 # PySide # the active qt window, = the freecad window since we are inside it 
    #KSUmw.addDockWidget(QtCore.Qt.LeftDockWidgetArea,KSUWidget)  # add the widget to the main window  
    textEdit_dim=textEdit_dim_hide
    KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
    KSUWidget.ui.textEdit.Visible=False
    KSUWidget.setFloating(False)  #dock
    KSUWidget.resize(sizeX,sizeY)
    KSUWidget.activateWindow()
    KSUWidget.raise_()
    #KSUWidget.ui.HelpPB.clicked.connect(KSUWidget.ui.onHelp)
    cfg_read_all()
    ini_vars[16] = u'left'
    docking_mode='left'
    #cfg_update_all()
    pg = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUp")
    dock_mode = pg.SetInt("dockingMode", 1)
    tabify()
    #KSUWidget.setFloating(False)  #dock
    #say ("now!")
##
def dock_right():
    global expanded_view, mingui
    expanded_view=0;mingui=0
    KSUmw = FreeCADGui.getMainWindow()                 # PySide # the active qt window, = the freecad window since we are inside it 
    t=FreeCADGui.getMainWindow()
    dw=t.findChildren(QtGui.QDockWidget)
    looping=False
    ldw=len (dw)
    if ldw>0:
        looping=True
    idw=0
    cv=None
    while looping and idw < ldw:
    #for d in dw:
        d=dw[idw]
        idw+=1
        area = t.dockWidgetArea(d)
        #if area == QtCore.Qt.LeftDockWidgetArea:
        #    print (d.windowTitle(), '(Left)')
        if area == QtCore.Qt.RightDockWidgetArea:
            print (d.windowTitle(), '(Right)')
            r_w=str(d.objectName()) #;print(r_w)
            cv = t.findChild(QtGui.QDockWidget, r_w)
            looping=False
    KSUmw.addDockWidget(QtCore.Qt.RightDockWidgetArea,KSUWidget)
    KSUWidget.setFloating(False)  #dock
    #RHDockWidget.resize(sizeXright,sizeYright)
    KSUWidget.activateWindow()
    KSUWidget.raise_()
    if KSUWidget and cv is not None:
        dw=t.findChildren(QtGui.QDockWidget)
        #t.tabifyDockWidget(cv,RHDockWidget)
        try:
            t.tabifyDockWidget(cv,KSUWidget)
            say( "Tabified done !")               
            #stop
        except:
            say('exception raised')
            pass
    #KSUmw = FreeCADGui.getMainWindow()                 # PySide # the active qt window, = the freecad window since we are inside it 
    #KSUmw.addDockWidget(QtCore.Qt.RightDockWidgetArea,KSUWidget)  # add the widget to the main window  
    textEdit_dim=textEdit_dim_hide
    KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
    KSUWidget.ui.textEdit.Visible=False
    KSUWidget.setFloating(False)  #dock
    KSUWidget.resize(sizeXright,sizeYright)
    KSUWidget.activateWindow()
    KSUWidget.raise_()
    cfg_read_all()
    ini_vars[16] = u'right'
    docking_mode='right'
    #cfg_update_all()
    pg = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUp")
    dock_mode = pg.SetInt("dockingMode", 2)    
    #KSUWidget.setFloating(False)  #dock
    #say ("now!")
##
def undock():
    global expanded_view, mingui
    expanded_view=0; mingui=0
    textEdit_dim=textEdit_dim_base
    KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
    KSUWidget.ui.textEdit.Visible=True
    KSUWidget.setFloating(True)  #undock
    KSUWidget.resize(sizeX,sizeY)
    KSUWidget.activateWindow()
    KSUWidget.raise_()
    cfg_read_all()
    ini_vars[16] = u'float'
    docking_mode='float'
    #cfg_update_all()
    pg = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUp")
    dock_mode = pg.SetInt("dockingMode", 0)
    #KSUWidget.resize(QtCore.QSize(300,100).expandedTo(KSUWidget.maximumSize())) # sets size of the widget
    #KSUWidget.setFloating(False)  #dock
    #say ("now!")
##
def temporary_undock():
    global expanded_view, mingui
    mingui=0
    #expanded_view=0
    #tabify()
    textEdit_dim=textEdit_dim_base
    KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
    KSUWidget.setFloating(True)  #undock
    KSUWidget.resize(sizeX,sizeY)
    KSUWidget.activateWindow()
    KSUWidget.raise_()
    #KSUWidget.resize(QtCore.QSize(300,100).expandedTo(KSUWidget.maximumSize())) # sets size of the widget
    #KSUWidget.setFloating(False)  #dock
    #say ("now!")
##
def minimz():
    #clear_console()
    global mingui
    
    #sayerr(mingui)
    if mingui==0:
        KSUWidget.setFloating(True)  #undock
        # KSUWidget.hide(); 
        # KSUWidget.setWindowState(QtCore.Qt.WindowMinimized)
        #KSUWidget.resize(500, 500)
        KSUWidget.resize(sizeXmin,sizeYmin)
        KSUWidget.activateWindow()
        KSUWidget.raise_()
        mingui=1
    else:
        mingui=0
        cfg_read_all()
        if docking_mode == 'float':
            undock()
            KSUWidget.setVisibility=True
        elif docking_mode == 'left':
            #tabify()
            dock()
            KSUWidget.setVisibility=True
        else:
            dock_right()
            KSUWidget.setVisibility=True
        #sayw(mingui)
    
        #sayw("kicad StepUp version "+str(___ver___))
##
#!#def minimz_alt():
#!#   KSUWidget.setFloating(True)  #undock
#!#   KSUWidget.setWindowState(QtCore.Qt.WindowMinimized)
#!#   KSUWidget.resize(sizeX,sizeY)
#!#   KSUWidget.activateWindow()
#!#   #KSUWidget.raise_()
##
#!#def onDestroy():
#!#    say ("Do stuff here")
##    
#font_size=12



###############################################################################################################
def centerOnScreen (widg):
    '''centerOnScreen()
    Centers the window on the screen.'''
    # sayw(widg.width());sayw(widg.height())
    # sayw(widg.pos().x());sayw(widg.pos().y())
    resolution = QtGui.QDesktopWidget().screenGeometry()
    xp=(resolution.width() / 2) - sizeXMax/2 # - (KSUWidget.frameSize().width() / 2)
    yp=(resolution.height() / 2) - sizeY/2 # - (KSUWidget.frameSize().height() / 2))
    # xp=widg.pos().x()-sizeXMax/2;yp=widg.pos().y()#+sizeY/2
    widg.setGeometry(xp, yp, sizeXMax, sizeY)
##

def singleInstance():
    app = QtGui.QApplication #QtGui.qApp
    for i in app.topLevelWidgets():
        #say (str(i.objectName()))
        if i.objectName() == "kicadStepUp":
            say (str(i.objectName()))
            #i.close()
            #i.deleteLater()
            say ('closed')
            return False
    t=FreeCADGui.getMainWindow()
    dw=t.findChildren(QtGui.QDockWidget)
    #say( str(dw) )
    for i in dw:
        #say (str(i.objectName()))
        if str(i.objectName()) == "kicadStepUp": #"kicad StepUp 3D tools":
            say (str(i.objectName())+' docked')
            #i.deleteLater()
            return False
    return True
##




###############################################################################################################
### new dock widget
### add def link inside class
#    def link(self, linkStr):
#        QtGui.QDesktopServices.openUrl(QtCore.QUrl(linkStr))

class Ui_DockWidget(object):
    def link(self, linkStr):
        #QtGui.QDesktopServices.openUrl(QtCore.QUrl(linkStr))
        try:
            QtGui.QDesktopServices.openUrl(QtCore.QUrl(linkStr))  #workaround Qt5 waiting for PySide2
        except:
            #QtGui.QDesktopServices.openUrl(QtCore.QUrl(linkStr.fromLocalFile()))
            pass
#class Ui_DockWidget(object):
    def setupUi(self, DockWidget):
        DockWidget.setObjectName("DockWidget")
        DockWidget.resize(169, 480)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("kicad-StepUp-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        DockWidget.setWindowIcon(icon)
        DockWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        DockWidget.setFeatures(QtGui.QDockWidget.DockWidgetFloatable|QtGui.QDockWidget.DockWidgetMovable)
        DockWidget.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.dockWidgetContents = QtGui.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.horizontalLayoutWidget = QtGui.QWidget(self.dockWidgetContents)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(5, 0, 160, 36))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtGui.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setSpacing(2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.dock_left = QtGui.QPushButton(self.horizontalLayoutWidget)
        self.dock_left.setMaximumSize(QtCore.QSize(28, 28))
        self.dock_left.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons-new/dock_left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.dock_left.setIcon(icon1)
        self.dock_left.setIconSize(QtCore.QSize(24, 24))
        self.dock_left.setObjectName("dock_left")
        self.horizontalLayout.addWidget(self.dock_left)
        self.dock_float = QtGui.QPushButton(self.horizontalLayoutWidget)
        self.dock_float.setMaximumSize(QtCore.QSize(28, 28))
        self.dock_float.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons-new/un_dock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.dock_float.setIcon(icon2)
        self.dock_float.setIconSize(QtCore.QSize(16, 16))
        self.dock_float.setObjectName("dock_float")
        self.horizontalLayout.addWidget(self.dock_float)
        self.dock_minimize = QtGui.QPushButton(self.horizontalLayoutWidget)
        self.dock_minimize.setMaximumSize(QtCore.QSize(28, 28))
        self.dock_minimize.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons-new/minimize.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.dock_minimize.setIcon(icon3)
        self.dock_minimize.setIconSize(QtCore.QSize(24, 24))
        self.dock_minimize.setObjectName("dock_minimize")
        self.horizontalLayout.addWidget(self.dock_minimize)
        self.dock_right = QtGui.QPushButton(self.horizontalLayoutWidget)
        self.dock_right.setMaximumSize(QtCore.QSize(28, 28))
        self.dock_right.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons-new/dock_right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.dock_right.setIcon(icon4)
        self.dock_right.setIconSize(QtCore.QSize(24, 24))
        self.dock_right.setObjectName("dock_right")
        self.horizontalLayout.addWidget(self.dock_right)
        self.close = QtGui.QPushButton(self.horizontalLayoutWidget)
        self.close.setMaximumSize(QtCore.QSize(28, 28))
        self.close.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons-new/closeW.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.close.setIcon(icon5)
        self.close.setIconSize(QtCore.QSize(24, 24))
        self.close.setObjectName("close")
        self.horizontalLayout.addWidget(self.close)
        self.gridLayoutWidget_4 = QtGui.QWidget(self.dockWidgetContents)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(4, 155, 161, 121))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_6 = QtGui.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_6.setSpacing(2)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.textInputX = QtGui.QLineEdit(self.gridLayoutWidget_4)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textInputX.sizePolicy().hasHeightForWidth())
        self.textInputX.setSizePolicy(sizePolicy)
        self.textInputX.setMaximumSize(QtCore.QSize(60, 16777215))
        self.textInputX.setObjectName("textInputX")
        self.gridLayout_6.addWidget(self.textInputX, 0, 0, 1, 1)
        self.textInputZ = QtGui.QLineEdit(self.gridLayoutWidget_4)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textInputZ.sizePolicy().hasHeightForWidth())
        self.textInputZ.setSizePolicy(sizePolicy)
        self.textInputZ.setMaximumSize(QtCore.QSize(60, 16777215))
        self.textInputZ.setObjectName("textInputZ")
        self.gridLayout_6.addWidget(self.textInputZ, 2, 0, 1, 1)
        self.textInputY = QtGui.QLineEdit(self.gridLayoutWidget_4)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textInputY.sizePolicy().hasHeightForWidth())
        self.textInputY.setSizePolicy(sizePolicy)
        self.textInputY.setMaximumSize(QtCore.QSize(60, 16777215))
        self.textInputY.setObjectName("textInputY")
        self.gridLayout_6.addWidget(self.textInputY, 1, 0, 1, 1)
        self.TranslateX = QtGui.QPushButton(self.gridLayoutWidget_4)
        self.TranslateX.setMinimumSize(QtCore.QSize(32, 32))
        self.TranslateX.setMaximumSize(QtCore.QSize(64, 64))
        self.TranslateX.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons-new/shiftX.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.TranslateX.setIcon(icon6)
        self.TranslateX.setObjectName("TranslateX")
        self.gridLayout_6.addWidget(self.TranslateX, 0, 1, 1, 1)
        self.TranslateY = QtGui.QPushButton(self.gridLayoutWidget_4)
        self.TranslateY.setMinimumSize(QtCore.QSize(32, 32))
        self.TranslateY.setMaximumSize(QtCore.QSize(64, 64))
        self.TranslateY.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons-new/shiftY.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.TranslateY.setIcon(icon7)
        self.TranslateY.setObjectName("TranslateY")
        self.gridLayout_6.addWidget(self.TranslateY, 1, 1, 1, 1)
        self.TranslateZ = QtGui.QPushButton(self.gridLayoutWidget_4)
        self.TranslateZ.setMinimumSize(QtCore.QSize(32, 32))
        self.TranslateZ.setMaximumSize(QtCore.QSize(64, 64))
        self.TranslateZ.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons-new/shiftZ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.TranslateZ.setIcon(icon8)
        self.TranslateZ.setObjectName("TranslateZ")
        self.gridLayout_6.addWidget(self.TranslateZ, 2, 1, 1, 1)
        self.PutOnX = QtGui.QPushButton(self.gridLayoutWidget_4)
        self.PutOnX.setMinimumSize(QtCore.QSize(32, 32))
        self.PutOnX.setMaximumSize(QtCore.QSize(64, 64))
        self.PutOnX.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons-new/putX.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PutOnX.setIcon(icon9)
        self.PutOnX.setObjectName("PutOnX")
        self.gridLayout_6.addWidget(self.PutOnX, 0, 3, 1, 1)
        self.PutOnY = QtGui.QPushButton(self.gridLayoutWidget_4)
        self.PutOnY.setMinimumSize(QtCore.QSize(32, 32))
        self.PutOnY.setMaximumSize(QtCore.QSize(64, 64))
        self.PutOnY.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons-new/putY.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PutOnY.setIcon(icon10)
        self.PutOnY.setObjectName("PutOnY")
        self.gridLayout_6.addWidget(self.PutOnY, 1, 3, 1, 1)
        self.PutOnZ = QtGui.QPushButton(self.gridLayoutWidget_4)
        self.PutOnZ.setMinimumSize(QtCore.QSize(32, 32))
        self.PutOnZ.setMaximumSize(QtCore.QSize(64, 64))
        self.PutOnZ.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons-new/putZ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PutOnZ.setIcon(icon11)
        self.PutOnZ.setObjectName("PutOnZ")
        self.gridLayout_6.addWidget(self.PutOnZ, 2, 3, 1, 1)
        self.gridLayoutWidget_5 = QtGui.QWidget(self.dockWidgetContents)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(5, 35, 160, 121))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_7 = QtGui.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_7.setSpacing(2)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.textInputRX = QtGui.QLineEdit(self.gridLayoutWidget_5)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textInputRX.sizePolicy().hasHeightForWidth())
        self.textInputRX.setSizePolicy(sizePolicy)
        self.textInputRX.setMaximumSize(QtCore.QSize(60, 16777215))
        self.textInputRX.setObjectName("textInputRX")
        self.gridLayout_7.addWidget(self.textInputRX, 0, 0, 1, 1)
        self.textInputRY = QtGui.QLineEdit(self.gridLayoutWidget_5)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textInputRY.sizePolicy().hasHeightForWidth())
        self.textInputRY.setSizePolicy(sizePolicy)
        self.textInputRY.setMaximumSize(QtCore.QSize(60, 16777215))
        self.textInputRY.setObjectName("textInputRY")
        self.gridLayout_7.addWidget(self.textInputRY, 1, 0, 1, 1)
        self.textInputRZ = QtGui.QLineEdit(self.gridLayoutWidget_5)
        self.textInputRZ.setMaximumSize(QtCore.QSize(60, 16777215))
        self.textInputRZ.setObjectName("textInputRZ")
        self.gridLayout_7.addWidget(self.textInputRZ, 2, 0, 1, 1)
        self.RotateX = QtGui.QPushButton(self.gridLayoutWidget_5)
        self.RotateX.setMinimumSize(QtCore.QSize(32, 32))
        self.RotateX.setMaximumSize(QtCore.QSize(64, 64))
        self.RotateX.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icons-new/rotateX.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.RotateX.setIcon(icon12)
        self.RotateX.setObjectName("RotateX")
        self.gridLayout_7.addWidget(self.RotateX, 0, 1, 1, 1)
        self.RotateY = QtGui.QPushButton(self.gridLayoutWidget_5)
        self.RotateY.setMinimumSize(QtCore.QSize(32, 32))
        self.RotateY.setMaximumSize(QtCore.QSize(64, 64))
        self.RotateY.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("icons-new/rotateY.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.RotateY.setIcon(icon13)
        self.RotateY.setObjectName("RotateY")
        self.gridLayout_7.addWidget(self.RotateY, 1, 1, 1, 1)
        self.RotateZ = QtGui.QPushButton(self.gridLayoutWidget_5)
        self.RotateZ.setMinimumSize(QtCore.QSize(32, 32))
        self.RotateZ.setMaximumSize(QtCore.QSize(64, 64))
        self.RotateZ.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("icons-new/rotateZ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.RotateZ.setIcon(icon14)
        self.RotateZ.setObjectName("RotateZ")
        self.gridLayout_7.addWidget(self.RotateZ, 2, 1, 1, 1)
        self.CenterX = QtGui.QPushButton(self.gridLayoutWidget_5)
        self.CenterX.setMinimumSize(QtCore.QSize(32, 32))
        self.CenterX.setMaximumSize(QtCore.QSize(64, 64))
        self.CenterX.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("icons-new/centerX.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.CenterX.setIcon(icon15)
        self.CenterX.setObjectName("CenterX")
        self.gridLayout_7.addWidget(self.CenterX, 0, 2, 1, 1)
        self.CenterY = QtGui.QPushButton(self.gridLayoutWidget_5)
        self.CenterY.setMinimumSize(QtCore.QSize(32, 32))
        self.CenterY.setMaximumSize(QtCore.QSize(64, 64))
        self.CenterY.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("icons-new/centerY.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.CenterY.setIcon(icon16)
        self.CenterY.setObjectName("CenterY")
        self.gridLayout_7.addWidget(self.CenterY, 1, 2, 1, 1)
        self.CenterZ = QtGui.QPushButton(self.gridLayoutWidget_5)
        self.CenterZ.setMinimumSize(QtCore.QSize(32, 32))
        self.CenterZ.setMaximumSize(QtCore.QSize(64, 64))
        self.CenterZ.setText("")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("icons-new/centerZ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.CenterZ.setIcon(icon17)
        self.CenterZ.setObjectName("CenterZ")
        self.gridLayout_7.addWidget(self.CenterZ, 2, 2, 1, 1)
        self.gridLayoutWidget_6 = QtGui.QWidget(self.dockWidgetContents)
        self.gridLayoutWidget_6.setGeometry(QtCore.QRect(4, 280, 161, 190))
        self.gridLayoutWidget_6.setObjectName("gridLayoutWidget_6")
        self.gridLayout_8 = QtGui.QGridLayout(self.gridLayoutWidget_6)
        self.gridLayout_8.setSpacing(2)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.HelpPB = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.HelpPB.setMinimumSize(QtCore.QSize(27, 36))
        self.HelpPB.setMaximumSize(QtCore.QSize(64, 64))
        self.HelpPB.setText("")
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("icons-new/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.HelpPB.setIcon(icon18)
        self.HelpPB.setObjectName("HelpPB")
        self.gridLayout_8.addWidget(self.HelpPB, 4, 1, 1, 1)
        self.ConfigPB = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.ConfigPB.setMinimumSize(QtCore.QSize(60, 36))
        self.ConfigPB.setMaximumSize(QtCore.QSize(64, 64))
        self.ConfigPB.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("icons-new/edit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ConfigPB.setIcon(icon19)
        self.ConfigPB.setObjectName("ConfigPB")
        self.gridLayout_8.addWidget(self.ConfigPB, 4, 0, 1, 1)
        self.pushPCB = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.pushPCB.setMinimumSize(QtCore.QSize(47, 36))
        self.pushPCB.setMaximumSize(QtCore.QSize(64, 64))
        self.pushPCB.setText("")
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("icons-new/Sketcher_Rectangle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushPCB.setIcon(icon20)
        self.pushPCB.setObjectName("pushPCB")
        self.gridLayout_8.addWidget(self.pushPCB, 3, 3, 1, 1)
        self.makeCompound = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.makeCompound.setMinimumSize(QtCore.QSize(47, 36))
        self.makeCompound.setMaximumSize(QtCore.QSize(64, 64))
        self.makeCompound.setText("")
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap("icons-new/compound.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.makeCompound.setIcon(icon21)
        self.makeCompound.setObjectName("makeCompound")
        self.gridLayout_8.addWidget(self.makeCompound, 1, 3, 1, 1)
        self.LoadBoard = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.LoadBoard.setMinimumSize(QtCore.QSize(60, 36))
        self.LoadBoard.setMaximumSize(QtCore.QSize(64, 64))
        self.LoadBoard.setText("")
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap("icons-new/importBoard.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.LoadBoard.setIcon(icon22)
        self.LoadBoard.setObjectName("LoadBoard")
        self.gridLayout_8.addWidget(self.LoadBoard, 2, 0, 1, 1)
        self.ScaleVRML = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.ScaleVRML.setMinimumSize(QtCore.QSize(60, 36))
        self.ScaleVRML.setMaximumSize(QtCore.QSize(64, 64))
        self.ScaleVRML.setText("")
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap("icons-new/export3DModel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ScaleVRML.setIcon(icon23)
        self.ScaleVRML.setObjectName("ScaleVRML")
        self.gridLayout_8.addWidget(self.ScaleVRML, 1, 0, 1, 1)
        self.cb_virtual = QtGui.QCheckBox(self.gridLayoutWidget_6)
        self.cb_virtual.setMinimumSize(QtCore.QSize(47, 32))
        self.cb_virtual.setMaximumSize(QtCore.QSize(64, 128))
        self.cb_virtual.setText("")
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap("icons-new/virtual.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cb_virtual.setIcon(icon24)
        self.cb_virtual.setObjectName("cb_virtual")
        self.gridLayout_8.addWidget(self.cb_virtual, 2, 1, 1, 1)
        self.cb_materials = QtGui.QCheckBox(self.gridLayoutWidget_6)
        self.cb_materials.setMinimumSize(QtCore.QSize(47, 32))
        self.cb_materials.setMaximumSize(QtCore.QSize(64, 128))
        self.cb_materials.setText("")
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap("icons-new/materials.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cb_materials.setIcon(icon25)
        self.cb_materials.setObjectName("cb_materials")
        self.gridLayout_8.addWidget(self.cb_materials, 1, 1, 1, 1)
        self.LoadFootprint = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.LoadFootprint.setMinimumSize(QtCore.QSize(60, 36))
        self.LoadFootprint.setMaximumSize(QtCore.QSize(64, 64))
        self.LoadFootprint.setText("")
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap("icons-new/importFP.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.LoadFootprint.setIcon(icon26)
        self.LoadFootprint.setObjectName("LoadFootprint")
        self.gridLayout_8.addWidget(self.LoadFootprint, 0, 0, 1, 1)
        self.cb_expStep = QtGui.QCheckBox(self.gridLayoutWidget_6)
        self.cb_expStep.setMinimumSize(QtCore.QSize(47, 20))
        self.cb_expStep.setMaximumSize(QtCore.QSize(128, 64))
        self.cb_expStep.setText("")
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap("icons-new/exportPart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cb_expStep.setIcon(icon27)
        self.cb_expStep.setObjectName("cb_expStep")
        self.gridLayout_8.addWidget(self.cb_expStep, 2, 3, 1, 1)
        self.makeUnion = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.makeUnion.setMinimumSize(QtCore.QSize(27, 36))
        self.makeUnion.setMaximumSize(QtCore.QSize(64, 64))
        self.makeUnion.setText("")
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap("icons-new/fusion.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.makeUnion.setIcon(icon28)
        self.makeUnion.setObjectName("makeUnion")
        self.gridLayout_8.addWidget(self.makeUnion, 0, 3, 1, 1)
        self.import3D = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.import3D.setMinimumSize(QtCore.QSize(27, 36))
        self.import3D.setMaximumSize(QtCore.QSize(64, 64))
        self.import3D.setText("")
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap("icons-new/add_block.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.import3D.setIcon(icon29)
        self.import3D.setObjectName("import3D")
        self.gridLayout_8.addWidget(self.import3D, 0, 1, 1, 1)
        self.checkCollisions = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.checkCollisions.setMinimumSize(QtCore.QSize(27, 36))
        self.checkCollisions.setMaximumSize(QtCore.QSize(64, 64))
        self.checkCollisions.setText("")
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap("icons-new/collisions.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.checkCollisions.setIcon(icon30)
        self.checkCollisions.setObjectName("checkCollisions")
        self.gridLayout_8.addWidget(self.checkCollisions, 3, 1, 1, 1)
        self.export3DStep = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.export3DStep.setMinimumSize(QtCore.QSize(60, 36))
        self.export3DStep.setMaximumSize(QtCore.QSize(64, 64))
        self.export3DStep.setText("")
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap("icons-new/export3DStep.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.export3DStep.setIcon(icon31)
        self.export3DStep.setObjectName("export3DStep")
        self.gridLayout_8.addWidget(self.export3DStep, 3, 0, 1, 1)
        self.CreateAxis = QtGui.QPushButton(self.gridLayoutWidget_6)
        self.CreateAxis.setMinimumSize(QtCore.QSize(27, 36))
        self.CreateAxis.setMaximumSize(QtCore.QSize(64, 64))
        self.CreateAxis.setText("")
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap("icons-new/axis.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.CreateAxis.setIcon(icon32)
        self.CreateAxis.setObjectName("CreateAxis")
        self.gridLayout_8.addWidget(self.CreateAxis, 4, 3, 1, 1)
        self.config_ini_Lbl = QtGui.QLabel(self.dockWidgetContents)
        self.config_ini_Lbl.setGeometry(QtCore.QRect(176, 12, 305, 16))
        self.config_ini_Lbl.setObjectName("config_ini_Lbl")
        self.textEdit = QtGui.QTextBrowser(self.dockWidgetContents)
        self.textEdit.setGeometry(QtCore.QRect(176, 36, 305, 453))
        self.textEdit.setOpenExternalLinks(True)
        self.textEdit.setObjectName("textEdit")
        DockWidget.setWidget(self.dockWidgetContents)


###############################################################################################################
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(axis_b64))
        self.CreateAxis.setIcon(QtGui.QIcon(pm))
        self.CreateAxis.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(exportPart_b64))
        self.cb_expStep.setIcon(QtGui.QIcon(pm))
        self.cb_expStep.setIconSize(QtCore.QSize(chkb_sizeX,chkb_sizeY))        
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(virtual_b64))
        self.cb_virtual.setIcon(QtGui.QIcon(pm))
        self.cb_virtual.setIconSize(QtCore.QSize(chkb_sizeX,chkb_sizeY))        
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(materials_b64))
        self.cb_materials.setIcon(QtGui.QIcon(pm))
        self.cb_materials.setIconSize(QtCore.QSize(chkb_sizeX,chkb_sizeY))        
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(collisions_b64))
        self.checkCollisions.setIcon(QtGui.QIcon(pm))
        self.checkCollisions.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))        
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(importBoard_b64))
        self.LoadBoard.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.LoadBoard.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(export3DModel_b64))
        self.ScaleVRML.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.ScaleVRML.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(importFP_b64))
        self.LoadFootprint.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.LoadFootprint.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(compound_b64))
        self.makeCompound.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.makeCompound.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(fusion_b64))
        self.makeUnion.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.makeUnion.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(rotateX_b64))
        self.RotateX.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.RotateX.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(rotateY_b64))
        self.RotateY.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.RotateY.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(rotateZ_b64))
        self.RotateZ.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.RotateZ.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(shiftX_b64))
        self.TranslateX.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.TranslateX.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(shiftY_b64))
        self.TranslateY.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.TranslateY.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(shiftZ_b64))
        self.TranslateZ.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.TranslateZ.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(centerX_b64))
        self.CenterX.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.CenterX.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(centerY_b64))
        self.CenterY.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.CenterY.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(centerZ_b64))
        self.CenterZ.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.CenterZ.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(putX_b64))
        self.PutOnX.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.PutOnX.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(putY_b64))
        self.PutOnY.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.PutOnY.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(putZ_b64))
        self.PutOnZ.setIconSize(QtCore.QSize(btn_sizeX,btn_sizeY))   
        self.PutOnZ.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(edit_b64))
        self.ConfigPB.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))   
        self.ConfigPB.setIcon(QtGui.QIcon(pm))
        
#!#        pm = QtGui.QPixmap()
#!#        pm.loadFromData(base64.b64decode(pcb_edge_b64))  #sketch
#!#        self.pushPCB.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))   
#!#        self.pushPCB.setIcon(QtGui.QIcon(pm))
        
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(help_b64))
        self.HelpPB.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))   
        self.HelpPB.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(add_block_b64))
        self.import3D.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))   
        self.import3D.setIcon(QtGui.QIcon(pm))
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(stop_grey_b64))
        #self.collisionLbl.setPixmap(pm)
        ##self.collisionLbl.setPixmapSize(QtCore.QSize(btn_sm_sizeX,btn_sm_sizeY)) ## todo
        #self.checkCollisions.clicked.connect(changePixmap_stop)
        #self.checkCollisions.clicked.connect(changePixmap_ok)
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(dock_left_b64))
        self.dock_left.setIconSize(QtCore.QSize(btn_sm_sizeX,btn_sm_sizeY))   
        self.dock_left.setIcon(QtGui.QIcon(pm))
        self.dock_left.clicked.connect(dock)
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(un_dock_b64))
        self.dock_float.setIconSize(QtCore.QSize(btn_sm_sizeX,btn_sm_sizeY))   
        self.dock_float.setIcon(QtGui.QIcon(pm))
        self.dock_float.clicked.connect(undock)
        #self.dock_minimize.clicked.connect(minimz_alt)
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(minimize_b64))
        self.dock_minimize.setIconSize(QtCore.QSize(btn_sm_sizeX,btn_sm_sizeY))   
        self.dock_minimize.setIcon(QtGui.QIcon(pm))
        self.dock_minimize.clicked.connect(minimz)
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(dock_right_b64))
        self.dock_right.setIconSize(QtCore.QSize(btn_sm_sizeX,btn_sm_sizeY))   
        self.dock_right.setIcon(QtGui.QIcon(pm))
        self.dock_right.clicked.connect(dock_right)
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(closeW_b64))
        self.close.setIconSize(QtCore.QSize(btn_sm_sizeX,btn_sm_sizeY))   
        self.close.setIcon(QtGui.QIcon(pm))
        self.close.clicked.connect(close_ksu)
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(export3DStep_b64))
        self.export3DStep.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))   
        self.export3DStep.setIcon(QtGui.QIcon(pm))
        self.export3DStep.clicked.connect(self.onExport3DStep)
        self.RotateX.clicked.connect(self.onRotateX) 
        self.RotateY.clicked.connect(self.onRotateY)
        self.RotateZ.clicked.connect(self.onRotateZ)
        self.TranslateX.clicked.connect(self.onTranslateX) 
        self.TranslateY.clicked.connect(self.onTranslateY)
        self.TranslateZ.clicked.connect(self.onTranslateZ)
        self.CenterX.clicked.connect(self.onCenterX) 
        self.CenterY.clicked.connect(self.onCenterY)
        self.CenterZ.clicked.connect(self.onCenterZ)
        self.PutOnX.clicked.connect(self.onPutOnX) 
        self.PutOnY.clicked.connect(self.onPutOnY)
        self.PutOnZ.clicked.connect(self.onPutOnZ)
        self.CreateAxis.clicked.connect(self.onCreateAxis)
        self.LoadFootprint.clicked.connect(self.onLoadFootprint_click)        
        if enable_materials==0:
            #export_board_2step=False
            self.cb_materials.setChecked(False)  # Check by default True or False
        else:
            self.cb_materials.setChecked(True)  # Check by default True or False
        # if enable_materials:
        #     self.checkBox_4.setChecked(True)  # Check by default True or False
        if export_board_2step==False:
            #export_board_2step=False
            self.cb_expStep.setChecked(False)  # Check by default True or False
        else:
            self.cb_expStep.setChecked(True)  # Check by default True or False
        say("export to STEP "+str(export_board_2step))
        if addVirtual==0:
            #export_board_2step=False
            self.cb_virtual.setChecked(False)  # Check by default True or False
        else:
            self.cb_virtual.setChecked(True)  # Check by default True or False
        ##export_board_2step=True
        self.cb_virtual.clicked.connect(self.on_cb_virtual_clicked)  # connect on def "on_checkBox_1_clicked"
        self.cb_materials.clicked.connect(self.on_cb_materials_clicked)  # connect on def "on_cb_materials_clicked"
        self.ScaleVRML.clicked.connect(self.onScaleVRML)        
        self.checkCollisions.clicked.connect(self.onCollisions)
        self.import3D.clicked.connect(self.onImport3DModel)
        self.LoadBoard.clicked.connect(self.onLoadBoard_click)
        self.cb_expStep.clicked.connect(self.on_cb_expStep_clicked)
        home = expanduser("~")
        ini_file_full_path_bold='<b>'+home+os.sep+'ksu-config.ini</b>'
        ini_file_full_path=home+os.sep+'ksu-config.ini'
        #self.config_ini_Lbl = QtGui.QLabel(ini_file_full_path, self)
        #self.config_ini_Lbl.setText(ini_file_full_path_bold)
        self.ConfigPB.clicked.connect(self.onCfg)        
        self.pushPCB.clicked.connect(self.onPushPCB)
        self.HelpPB.clicked.connect(self.onHelp)
        self.makeUnion.clicked.connect(group_part_union)
        self.makeCompound.clicked.connect(group_part)
        self.config_ini_Lbl.linkActivated.connect(self.link)
        local_link="<a href='"+ini_file_full_path+"' target='_blank'>"+ini_file_full_path_bold+"</a>"
        #self.config_ini_Lbl.setText(local_link)
        self.config_ini_Lbl.setText('')
        self.config_ini_Lbl.setToolTip("ksu config ini file\nlocation")
        self.textInputRX.setAlignment(QtCore.Qt.AlignRight)
        self.textInputRY.setAlignment(QtCore.Qt.AlignRight)
        self.textInputRZ.setAlignment(QtCore.Qt.AlignRight)
        self.textInputX.setAlignment(QtCore.Qt.AlignRight)
        self.textInputY.setAlignment(QtCore.Qt.AlignRight)
        self.textInputZ.setAlignment(QtCore.Qt.AlignRight)
                
###############################################################################################################

        self.retranslateUi(DockWidget)
        QtCore.QMetaObject.connectSlotsByName(DockWidget)
        DockWidget.setTabOrder(self.dock_left, self.dock_float)
        DockWidget.setTabOrder(self.dock_float, self.dock_minimize)
        DockWidget.setTabOrder(self.dock_minimize, self.dock_right)
        DockWidget.setTabOrder(self.dock_right, self.close)
        DockWidget.setTabOrder(self.close, self.textInputRX)
        DockWidget.setTabOrder(self.textInputRX, self.RotateX)
        DockWidget.setTabOrder(self.RotateX, self.CenterX)
        DockWidget.setTabOrder(self.CenterX, self.textInputRY)
        DockWidget.setTabOrder(self.textInputRY, self.RotateY)
        DockWidget.setTabOrder(self.RotateY, self.CenterY)
        DockWidget.setTabOrder(self.CenterY, self.textInputRZ)
        DockWidget.setTabOrder(self.textInputRZ, self.RotateZ)
        DockWidget.setTabOrder(self.RotateZ, self.CenterZ)
        DockWidget.setTabOrder(self.CenterZ, self.textInputX)
        DockWidget.setTabOrder(self.textInputX, self.TranslateX)
        DockWidget.setTabOrder(self.TranslateX, self.PutOnX)
        DockWidget.setTabOrder(self.PutOnX, self.textInputY)
        DockWidget.setTabOrder(self.textInputY, self.TranslateY)
        DockWidget.setTabOrder(self.TranslateY, self.PutOnY)
        DockWidget.setTabOrder(self.PutOnY, self.textInputZ)
        DockWidget.setTabOrder(self.textInputZ, self.TranslateZ)
        DockWidget.setTabOrder(self.TranslateZ, self.PutOnZ)
        DockWidget.setTabOrder(self.PutOnZ, self.LoadFootprint)
        DockWidget.setTabOrder(self.LoadFootprint, self.import3D)
        DockWidget.setTabOrder(self.import3D, self.makeUnion)
        DockWidget.setTabOrder(self.makeUnion, self.ScaleVRML)
        DockWidget.setTabOrder(self.ScaleVRML, self.cb_materials)
        DockWidget.setTabOrder(self.cb_materials, self.makeCompound)
        DockWidget.setTabOrder(self.makeCompound, self.LoadBoard)
        DockWidget.setTabOrder(self.LoadBoard, self.cb_virtual)
        DockWidget.setTabOrder(self.cb_virtual, self.cb_expStep)
        DockWidget.setTabOrder(self.cb_expStep, self.export3DStep)
        DockWidget.setTabOrder(self.export3DStep, self.checkCollisions)
        DockWidget.setTabOrder(self.checkCollisions, self.CreateAxis)
        DockWidget.setTabOrder(self.CreateAxis, self.ConfigPB)
        DockWidget.setTabOrder(self.ConfigPB, self.HelpPB)
        DockWidget.setTabOrder(self.HelpPB, self.textEdit)

## retraslateUi Qt5 compatibility #############################################################################################################
    def retranslateUi(self, DockWidget):
        #DockWidget.setWindowTitle(QtGui.QApplication.translate("DockWidget", "kicad StepUp tools", None, QtGui.QApplication.UnicodeUTF8))
        DockWidget.setWindowTitle("kicad StepUp tools")
        self.dock_left.setToolTip("dock left")
        self.dock_float.setToolTip("un-dock (floating)")
        self.dock_minimize.setToolTip("minimize")
        self.dock_right.setToolTip("dock right")
        self.close.setToolTip("close")
        self.textInputX.setToolTip("translate (+/- mm)")
        self.textInputX.setText("0.10")
        self.textInputZ.setToolTip("translate (+/- mm)")
        self.textInputZ.setText("0.10")
        self.textInputY.setToolTip("translate (+/- mm)")
        self.textInputY.setText("0.10")
        self.TranslateX.setToolTip("translate X (+/- mm)")
        self.TranslateY.setToolTip("translate Y (+/- mm)")
        self.TranslateZ.setToolTip("translate Z (+/- mm)")
        self.PutOnX.setToolTip("put on X")
        self.PutOnY.setToolTip("put on Y")
        self.PutOnZ.setToolTip("put on Z")
        self.textInputRX.setToolTip("rotation angle (+/- deg)")
        self.textInputRX.setText("90")
        self.textInputRY.setToolTip("rotation angle (+/- deg)")
        self.textInputRY.setText("90")
        self.textInputRZ.setToolTip("rotation angle (+/- deg)")
        self.textInputRZ.setText("90")
        self.RotateX.setToolTip("rotate X (+/- deg)")
        self.RotateY.setToolTip("rotate Y (+/- deg)")
        self.RotateZ.setToolTip("rotate Z (+/- deg)")
        self.CenterX.setToolTip("center X")
        self.CenterY.setToolTip("center Y")
        self.CenterZ.setToolTip("center Z")
        self.makeCompound.setToolTip("make Compound of Parts")
        self.LoadBoard.setToolTip("Load kicad\n"
"Board .kicad_pcb")
        self.ScaleVRML.setToolTip("export to kicad:\n"
"STEP & scaled VRML 1/2.54")
        self.cb_virtual.setToolTip("enalble loading\n"
"virtual & mechanical\n"
"models")
        self.cb_materials.setToolTip("use wrl\n"
"material")
        self.LoadFootprint.setToolTip("load kicad footprint\n"
"\'kicad_mod\'")
        self.cb_expStep.setToolTip("export STEP Board\n"
"and Parts after loading")
        self.makeUnion.setToolTip("make Union of Parts")
        self.import3D.setToolTip("import STEP\n"
"3D model")
        self.checkCollisions.setToolTip("check Collisions\n"
"tolerance 1e-06")
        self.export3DStep.setToolTip("export selected objects to STEP")
        self.CreateAxis.setToolTip("create reference Axis")
        self.HelpPB.setToolTip("Help & starting Guide")
        self.ConfigPB.setToolTip("view Config File content")
        self.pushPCB.setToolTip("push PCB Edge to KiCad\n"
"from Sketcher to pcbnew")
        #self.config_ini_Lbl.setText("<b>TextLabel</b>")
        #self.config_ini_Lbl.setText("<b>TextLabel</b>")


  ## NB!!! comment the line      ##self.config_ini_Lbl.setText("<b>TextLabel</b>")
###############################################################################################################

    def onRotateX(self):
        FreeCAD.Console.PrintMessage("RotateX!")
        alpha=self.textInputRX.text()
        alpha=alpha.replace(',', '.')
        angle=alpha.split('.')
        self.textInputRX.setText(angle[0])
        routineR_XYZ('x',angle[0])
        position=get_position()
## 
    def onRotateY(self):
        FreeCAD.Console.PrintMessage("RotateY!")
        alpha=self.textInputRY.text()
        alpha=alpha.replace(',', '.')
        angle=alpha.split('.')
        self.textInputRY.setText(angle[0])
        routineR_XYZ('y',angle[0])
        position=get_position()
##
    def onRotateZ(self):
        FreeCAD.Console.PrintMessage("RotateZ!")
        alpha=self.textInputRZ.text()
        alpha=alpha.replace(',', '.')
        angle=alpha.split('.')
        self.textInputRZ.setText(angle[0])
        routineR_XYZ('z',angle[0])
        position=get_position()
##
    def onTranslateX(self):
        v=self.textInputX.text()
        v=v.replace(',', '.')
        v=v.replace(" ", "")
        #FreeCAD.Console.PrintMessage(v+"\r\n")
        routineT_XYZ('x',v)
        position=get_position()
##
    def onTranslateY(self):
        v=self.textInputY.text()
        v=v.replace(',', '.')
        v=v.replace(" ", "")
        #FreeCAD.Console.PrintMessage(v+"\r\n")
        routineT_XYZ('y',v)
        position=get_position()
##
    def onTranslateZ(self):
        v=self.textInputZ.text()
        v=v.replace(',', '.')
        v=v.replace(" ", "")
        #FreeCAD.Console.PrintMessage(v+"\r\n")
        routineT_XYZ('z',v)
        position=get_position()
##
    def onCenterX(self):
        FreeCAD.Console.PrintMessage("centering\r\n")
        routineC_XYZ('x')
        position=get_position()
##
    def onCenterY(self):
        FreeCAD.Console.PrintMessage("centering\r\n")
        routineC_XYZ('y')
        position=get_position()
##
    def onCenterZ(self):
        FreeCAD.Console.PrintMessage("centering\r\n")
        routineC_XYZ('z')
        position=get_position()
##
    def onPutOnX(self):
        FreeCAD.Console.PrintMessage("putting on Plane X\r\n")
        routineP_XYZ('x')
        position=get_position()
##
    def onPutOnY(self):
        FreeCAD.Console.PrintMessage("putting on Plane Y\r\n")
        routineP_XYZ('y')
        position=get_position()
##
    def onPutOnZ(self):
        FreeCAD.Console.PrintMessage("putting on Plane Z\r\n")
        routineP_XYZ('z')
        position=get_position()
##
    def onCreateAxis(self):
        FreeCAD.Console.PrintMessage("Create Axis!"+"\r\n")
        if FreeCAD.ActiveDocument is None:
            #say("none")
            FreeCAD.newDocument()
        if FreeCAD.ActiveDocument.getObject("axis") is None:
            create_axis()
##
    def onLoadFootprint_click(self):
        #self.setGeometry(25, 250, 500, 500)
        sayw("kicad StepUp version "+str(___ver___))
        #say("tolerance on vertex = "+str(edge_tolerance))
        say("tolerance on vertex applied")
        onLoadFootprint()
##
    def on_cb_materials_clicked(self):
        global enable_materials
        if self.cb_materials.isChecked():
            enable_materials=1
            ini_vars[13] = u'enablematerials'
            #cfgParsWrite(configFilePath)
            #cfg_update_all()
            prefs = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUpGui")
            prefs.SetBool('vrml_materials',1)
        else:
            enable_materials=0
            ini_vars[13] = u'nomaterials'
            #cfgParsWrite(configFilePath)
            #cfg_update_all()
            prefs = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUpGui")
            prefs.SetBool('vrml_materials',0)
        say("materials = "+str(enable_materials))
##
    def onScaleVRML(self):
        global applymaterials, exportS
        FreeCAD.Console.PrintMessage("ScaleToVRML!"+"\r\n")
        applymaterials=0
        if self.cb_materials.isChecked():
            applymaterials=1
        #self.setGeometry(25, 250, 500, 500)
        result=routineScaleVRML()
        #position=get_position()
        #try:
        #    dummy=str(position[0])
        ##if exportS:
        ##    try:
        ##        say("X:"+str(position[0]))
        ##        say("Y:"+str(position[1]))
        ##        say("Z:"+str(position[2]))
        #except:
        #    pass
        if result==-1:
            msg="************\r\nSelect an object\r\n************"
            self.labelInfoMsg.setText(msg)
##
    def changePixmap_stop_disabled(self):
        #print("Do stuff here")
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(stop_b64))
        self.collisionLbl.setPixmap(pm)
        self.collisionLbl.setEnabled(False)
        self.collisionLbl.setToolTip('collisions result status')
        #self.setPixmap(pm)
        #self.pixmap = QtGui.QPixmap(pm)
        #self.repaint() # repaint() will trigger the paintEvent(self, event), this way the new pixmap will be drawn on the label
    ##self.checkCollisions.clicked.connect(changePixmap_ok)
##    
    def changePixmap_ok(self):
        #print("Do stuff here")
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(ok_b64))
        #self.collisionLbl.setPixmap(pm)
        #self.collisionLbl.setEnabled(True)
        self.checkCollisions.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))
        self.checkCollisions.setIcon(pm)
        #self.checkCollisions.setEnabled(True)
        QtCore.QTimer.singleShot(timer_Collisions, self.changePixmap_button_base)
        self.checkCollisions.setToolTip('NO collisions found')
        #self.setPixmap(pm)
        ##self.pixmap = QtGui.QPixmap(pm)
        #self.repaint() # repaint() will trigger the paintEvent(self, event), this way the new pixmap will be drawn on the label
##
    def changePixmap_button_base(self):
        #print("Do stuff here")
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(collisions_b64))
        #self.collisionLbl.setPixmap(pm)
        #self.collisionLbl.setEnabled(True)
        self.checkCollisions.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))
        self.checkCollisions.setIcon(pm)
        #self.checkCollisions.setEnabled(True)
        #QtCore.QTimer.singleShot(timer_Collisions, self.changePixmap_stop_disabled)
        self.checkCollisions.setToolTip('check Collisions\ntolerance 1e-06')
        #self.setPixmap(pm)
        ##self.pixmap = QtGui.QPixmap(pm)
        #self.repaint() # repaint() will trigger the paintEvent(self, event), this way the new pixmap will be drawn on the label
##
    def changePixmap_collisions(self):
        #print("Do stuff here")
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(stop_b64))
        self.checkCollisions.setIconSize(QtCore.QSize(btn_md_sizeX,btn_md_sizeY))
        self.checkCollisions.setIcon(pm)
        QtCore.QTimer.singleShot(timer_Collisions, self.changePixmap_button_base)
        self.checkCollisions.setToolTip('collisions FOUND!')
        #self.setPixmap(pm)
        #self.pixmap = QtGui.QPixmap(pm)
        #self.repaint() # repaint() will trigger the paintEvent(self, event), this way the new pixmap will be drawn on the label
##
    def changePixmap_stop(self):
        #print("Do stuff here")
        pm = QtGui.QPixmap()
        pm.loadFromData(base64.b64decode(stop_b64))
        self.collisionLbl.setPixmap(pm)
        self.collisionLbl.setEnabled(True)
        QtCore.QTimer.singleShot(timer_Collisions, self.changePixmap_stop_disabled)
        self.collisionLbl.setToolTip('collisions FOUND!')
        #self.setPixmap(pm)
        #self.pixmap = QtGui.QPixmap(pm)
        #self.repaint() # repaint() will trigger the paintEvent(self, event), this way the new pixmap will be drawn on the label
##
    def onImport3DModel(self):
        
        Import3DModelF()
##

    def onExport3DStep(self):
        Export3DStepF()
        
##           
    def onCollisions(self):
        #self.setGeometry(25, 250, 500, 500)
        collisions=routineCollisions()
        if collisions==0:
            self.changePixmap_ok()
        elif collisions==1:
            self.changePixmap_collisions()
        else:
            self.changePixmap_button_base()
        #    self.label17.setText("No")
        #    self.label18.setText("collisions")
        #    self.label19.setText("found!")
        #elif collisions==1:
        #    self.label17.setText("<b><font color=red>Collisions</b>")
        #    self.label18.setText("<b>detected!</b>")
        #    self.label19.setText("<b>!!!</b>")
        #else:
        #    self.label17.setText(" ")
        #    self.label18.setText(" ")
        #    self.label19.setText(" ")
    def onLoadBoard_click(self):
        #self.setGeometry(25, 250, 500, 500)
        sayw("kicad StepUp version "+str(___ver___))
        #say("tolerance on vertex = "+str(edge_tolerance))
        say("tolerance on vertex applied")
        #ini_content=read_ini_file()
        ini_content=cfg_read_all()
        self.textEdit.setText(ini_content)
        cfg_read_all()
        #cfgParsRead(configFilePath)
        onLoadBoard()
##    
    def on_cb_expStep_clicked(self):
        global export_board_2step
        if self.cb_expStep.isChecked():
            export_board_2step=True
            ini_vars[12] = u'yes'
            #cfgParsWrite(configFilePath)
            #cfg_update_all()
            prefs = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUpGui")
            prefs.SetBool('exp_step',1)
        else:
            export_board_2step=False
            ini_vars[12] = u'no'
            #cfgParsWrite(configFilePath)
            #cfg_update_all()
            prefs = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUpGui")
            prefs.SetBool('exp_step',0)
        say("export STEP = "+str(export_board_2step))
##
    def on_cb_virtual_clicked(self):
        global addVirtual
        if self.cb_virtual.isChecked():
            addVirtual=1
            ini_vars[7] = u'addVirtual'
            #cfgParsWrite(configFilePath)
            #cfg_update_all()
            prefs = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUpGui")
            prefs.SetBool('mode_virtual',1)
        else:
            addVirtual=0
            ini_vars[7] = u'noVirtual'
            #cfgParsWrite(configFilePath)
            #cfg_update_all()
            prefs = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/Mod/kicadStepUpGui")
            prefs.SetBool('mode_virtual',0)
        say("virtual = "+str(addVirtual))
##
    def onCfg(self):
        global expanded_view
        global configFilePath, ini_content
        #QtGui.QMessageBox.information(None,"info ...","your home path is \r\n"+ home+"\r\n")
        #sayw(expanded_view)
        #stop
        if 1:
            #if "ksuWB" not in FreeCADGui.activeWorkbench().name():
            if 'pref_page' not in globals():
                FreeCADGui.activateWorkbench("KiCadStepUpWB")
            FreeCADGui.runCommand("Std_DlgPreferences")
        elif expanded_view!=1:
            temporary_undock() #to do ....
            #undock()
            clear_console()
            ini_content=cfg_read_all()
            self.textEdit.setText(ini_content)
            cfg_read_all()
            #resolution = QtGui.QDesktopWidget().screenGeometry()
            #xp=(resolution.width() / 2) - sizeXMax/2 # - (KSUWidget.frameSize().width() / 2)
            #yp=(resolution.height() / 2) - sizeY/2 # - (KSUWidget.frameSize().height() / 2))
            #KSUWidget.setGeometry(xp, yp, sizeXMax, sizeY)
            textEdit_dim = textEdit_dim_base
            self.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
            self.textEdit.setToolTip("ksu config ini file\ncontent")
            centerOnScreen (KSUWidget)
            #say("your home path is "+ expanduser("~"))
            sayw("kicad StepUp version "+str(___ver___))
            #ini_content=read_ini_file()
            expanded_view=1
            #QtCore.QTimer.singleShot(10,self.onCfg)
            
            #cfgParsRead(configFilePath)
        else:
            #sayw(expanded_view)
            expanded_view=0
            clear_console()
            KSUWidget.setVisibility=False
            #textEdit_dim = textEdit_dim_hide
            #self.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
            cfg_read_all()
            if docking_mode == 'float':
                undock()
                KSUWidget.setVisibility=True
            elif docking_mode == 'left':
                #tabify()
                dock()
                KSUWidget.setVisibility=True
            else:
                dock_right()
                KSUWidget.setVisibility=True
            sayw("kicad StepUp version "+str(___ver___))
            
#    def onHide(self):
#        global expanded_view
#        global configFilePath, ini_content
#        if not expanded_view:
#            undock()
#            #resolution = QtGui.QDesktopWidget().screenGeometry()
#            #xp=(resolution.width() / 2) - sizeXMax/2 # - (KSUWidget.frameSize().width() / 2)
#            #yp=(resolution.height() / 2) - sizeY/2 # - (KSUWidget.frameSize().height() / 2))
#            #KSUWidget.setGeometry(xp, yp, sizeXMax, sizeY)
#            centerOnScreen (KSUWidget)
#            #ini_content=read_ini_file()
#            ini_content=cfg_read_all()
#            self.textEdit.setText(ini_content)
#            cfg_read_all()
#            expanded_view=True
#            #cfgParsRead(configFilePath)
#        else:
#            KSUWidget.setGeometry(250, 250, sizeX, sizeY)
#            dock_right()
#            expanded_view=False
#        #ini_content=read_ini_file()
#        ini_content=cfg_read_all()
#        self.textEdit.setText(ini_content)
#        #configParser.read(configFilePath)
#        cfg_read_all()
#        #cfgParsRead(configFilePath)
#        #global ui
#        #Dialog = QtGui.QDialog()
#        #ui = Ui_Dialog()
#        #ui.setupUi(Dialog)
#        #ui.comboBox.addItems(material_properties_names)
#        #reply=Dialog.exec_()
#
#        #bklist = configParser.get('Blacklist', 'bklist')
#        #say(configFilePath)
#        #say(bklist)

##
    def onPushPCB(self):
        PushPCB()
    # #def onExport3DStep(self):
    #     global last_3d_path, start_time, load_sketch
    #     #say("export3DSTEP")
    #     if load_sketch==False:
    #         msg="""<b>Edge editing NOT supported on FC0.15!</b><br>please upgrade your FC release"""
    #         say_warning(msg)
    #         msg="Edge editing NOT supported on FC0.15!"
    #         sayerr(msg)            
    #     #if 0:
    #     #if FreeCAD.ActiveDocument is None:
    #     #    FreeCAD.newDocument("PCB_Sketch")
    #     #    PCB_Sketch= FreeCAD.activeDocument().addObject('Sketcher::SketchObject','PCB_Sketch')
    #     #    offset=[0.0,0.0] #offset=[148.5,98.5]
    #     #    FreeCAD.activeDocument().PCB_Sketch.Placement = FreeCAD.Placement(FreeCAD.Vector(offset[0],offset[1]),FreeCAD.Rotation(0.000000,0.000000,0.000000,1.000000))
    #     #    FreeCAD.getDocument('PCB_Sketch').recompute()
    #     #    FreeCADGui.SendMsgToActiveView("ViewFit")
    #     else:
    #         sel = FreeCADGui.Selection.getSelection()
    #         if len (sel) == 1:
    #             #sayw(doc.Name)
    #             if "Sketch" in sel[0].TypeId:
    #                 cfg_read_all()
    #                 if last_3d_path is "":
    #                     last_3d_path=last_pcb_path
    #                     sayw(last_pcb_path)
    #                 #getSaveFileName(self,"saveFlle","Result.txt",filter ="txt (*.txt *.)")
    #                 testing=False
    #                 if not testing:
    #                     Filter=""
    #                     name, Filter = PySide.QtGui.QFileDialog.getSaveFileName(None, "Push Sketch PCB Edge to KiCad board ...",
    #                         last_3d_path, "*.kicad_pcb")
    #                 else:
    #                     name='d:/Temp/e2.kicad_pcb'
    #                 #say(name)
    #                 if name:
    #                     if os.path.exists(name):
    #                         last_3d_path=os.path.dirname(name)
    #                         start_time=current_milli_time()
    #                         export_pcb(name)
    #                     else:
    #                         msg="""Save to <b>an EXISTING KiCad pcb file</b> to update your Edge!"""
    #                         say_warning(msg)
    #                         msg="Save to an EXISTING KiCad pcb file to update your Edge!"
    #                         sayerr(msg)
    #                     
    #             else:
    #                 msg="""select one Sketch to be pushed to kicad board!"""
    #                 sayerr(msg)
    #                 say_warning(msg)
    #         
    #         else:
    #             msg="""select one Sketch to be pushed to kicad board!"""
    #             sayerr(msg)
    #             say_warning(msg)
        
    
    # def onHelp(self):
    #     m = Timer (5.0,ZoomFitThread)
    #     m.start()
        
    
        
    def onHelp(self):
        global expanded_view
        global configFilePath, ini_content, pt_osx, pt_lnx
        #QtGui.QMessageBox.information(None,"info ...","your home path is \r\n"+ home+"\r\n")
        #say("your home path is "+ expanduser("~"))
        #pm = QtGui.QPixmap()
        #pm.loadFromData(base64.b64decode(dock_left_b64))
        #sayw(expanded_view)
        
        if expanded_view!=2:
            clear_console()
            cfg_read_all()
            temporary_undock() #to do ....
            #undock()
            #resolution = QtGui.QDesktopWidget().screenGeometry()
            #xp=(resolution.width() / 2) - sizeXMax/2 # - (KSUWidget.frameSize().width() / 2)
            #yp=(resolution.height() / 2) - sizeY/2 # - (KSUWidget.frameSize().height() / 2))
            #KSUWidget.setGeometry(xp, yp, sizeXMax, sizeY)
            textEdit_dim = textEdit_dim_base
            self.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
            self.textEdit.setToolTip("Help Start Guide")
            centerOnScreen (KSUWidget)
            #ini_content=read_ini_file()
            sayw("kicad StepUp version "+str(___ver___))
            help_txt="""<font color=GoldenRod><b>kicad StepUp version """+___ver___+"""</font></b><br>"""
            help_txt+="""<font color=black>"""
            help_txt+="""<b>Kicad StepUp</b> is a tool set to easily <b>collaborate between kicad pcb EDA</b> (board and 3D parts) as STEP models <b>and FreeCAD MCAD</b> modeler.<br>"""
            help_txt+="""</font>"""
            help_txt+="<font color=black>"
            home = expanduser("~")
            ini_file_full_path=home+os.sep+'ksu-config.ini'
            ini_fname='ksu-config.ini'
            #FreeCAD.Console.PrintMessage(FreeCAD.ConfigGet("AppHomePath")+'Mod/')
            file_path_mod=FreeCAD.ConfigGet("UserAppData")+'Mod'
            if os.path.exists(file_path_mod):
                say('Mod folder exists\r\n')
            #else:
            #    msg="missing Mod folder Module!\r\n\r\n"
            #    reply = QtGui.QMessageBox.information(None,"Info ...",msg)
            #if not pt_osx and not pt_lnx:
            #    import ksu_locator
            #    ksuWBpath = os.path.dirname(ksu_locator.__file__)
            #    #sys.path.append(ksuWB + '/Gui')
            #    ksuWB_demo_path =  os.path.join( ksuWBpath, 'demo')
            #    pdf_file_path=os.path.join(ksuWB_demo_path,'kicadStepUp-starter-Guide.pdf')
            #    #say(pdf_file_path)
            #    pdf_name='kicadStepUp-starter-Guide'
            #    help_txt+="<b>configuration options:</b><br>Configuration options are located in the preferences system of FreeCAD, which is located in the Edit menu -&gt; Preferences.<br>"
            #    help_txt+="<b>starter Guide:</b><br><a href='"+pdf_file_path+"' target='_blank'>"+pdf_name+"</a><br>"
            #if not pt_osx and not pt_lnx:
            #    pdf_file_path=file_path_mod+os.sep+'ksu-wb'+os.sep+'demo'+os.sep+'kicadStepUp-starter-Guide.pdf'
            #    #say(pdf_file_path)
            #    pdf_name='kicadStepUp-starter-Guide'
            #    help_txt+="<b>configuration options:</b><br>Configuration options are located in the preferences system of FreeCAD, which is located in the Edit menu -&gt; Preferences.<br>"
            #    help_txt+="<b>starter Guide:</b><br><a href='"+pdf_file_path+"' target='_blank'>"+pdf_name+"</a><br>"
            #else:
            #    #say(pdf_file_path)
            #    pdf_name='kicadStepUp-starter-Guide'
            #    help_txt+="<b>configuration options:</b><br>Configuration options are located in the preferences system of FreeCAD, which is located in the Edit menu -&gt; Preferences.<br>"
            #    help_txt+="starter Guide:<br><u>FC-UserAppData/Mod<br>"+pdf_name+"</u><br>"
            import ksu_locator
            ksuWBpath = os.path.dirname(ksu_locator.__file__)
            ksuWB_demo_path =  os.path.join( ksuWBpath, 'demo')
            pdf_file_path=os.path.join(ksuWB_demo_path,'kicadStepUp-starter-Guide.pdf')
            pdf_name='kicadStepUp-cheat-sheet'
            help_txt+="<b>configuration options:</b><br>Configuration options are located in the preferences system of FreeCAD, which is located in the Edit menu -&gt; Preferences.<br>"
            help_txt+="starter Guide:<br><b>"+pdf_file_path+"<br>"+pdf_name+"</b><br>"
            help_txt+="<a href='https://github.com/easyw/kicadStepUpMod/blob/master/demo/kicadStepUp-cheat-sheet.pdf'  target='_blank'>kicadStepUp-cheat-sheet.pdf</a><br>"
            #help_txt+="<img src='"+pm+"' style='width:32px;height:32px;'>"
            help_txt+="<b>StepUp</b> can be used <b>to align 3D model to kicad footprint</b>.<br>"
            help_txt+="The artwork can be used for MCAD interchange and collaboration, and for enclosure design.<br>"
            help_txt+="The 3D visualization of components on board assemblies in kicad 3dviewer, will be the same in your mechanical software, "
            help_txt+="because of the STEP interchange format.<br>"
            help_txt+="It is also possible to <b>Update a pcb Edge from a FC Sketcher.</b><br>"
            help_txt+="<br><b>First of all:</b> configure your path to 3D models in<br><i><b>FreeCAD Preferences Page</b></i><br>"
            help_txt+="<b>Note:</b> each button has its own <b>Tooltip</b><br>"
            help_txt+="useful buttons:<br><b>Load kicad Board directly</b> -> will load kicad board and parts in FreeCAD coming from kicad '.kicad_pcb' file<br>"
            help_txt+="<b>Load kicad Footprint module</b> -> will load directly kicad footprint in FreeCAD to easily align the 3D model to footprint<br>"
            help_txt+="<b>Export to kicad STEP & scaled VRML</b> -> will convert MCAD model to STEP and VRML to be used by Kicad and kicad StepUp<br>"
            help_txt+="<b>   -> VRML can be multipart;<br>   -> STEP must be single part</b><br>(<i>'Part Boolean Union'</i> or <i>'Part Makecompound'</i>)<br>"
            help_txt+="<i>assign material to selected colors and your VRML 3D models will have nice shiny effects</i><br>"
            help_txt+="<b>Push pcb Sketch to kicad_pcb Edge</b> -> will push pcb Sketch to kicad_pcb Edge in your design; it can be done with an empty or with an existing pcb Edge<br>"
            help_txt+="<br>for a more detailed help have a look at <br><b>kicadStepUp-starter-Guide.pdf</b><br>"
            help_txt+="or just follow the <b>YouTube video tutorials</b> <br><a href='https://youtu.be/h6wMU3lE_sA'  target='_blank'>kicadStepUp basics</a><br>"
            help_txt+="<a href='https://youtu.be/O6vr8QFnYGw' target='_blank'>kicadStepUp STEP alignment to Kicad footprint</a><br>"
            help_txt+="<a href='https://github.com/easyw/kicadStepUpMod' target='_blank'>check always the latest release of kicadStepUp</a><br><br>"
            help_txt+="Designing in kicad native 3d-viewer will produce a fully aligned STEP MCAD version "
            help_txt+="with the same view of kicad 3d render.<br>"
            help_txt+="Moreover, KiCad StepUp tool set <b>will let you to load the kicad footprint inside FreeCAD and align the 3D part with a visual real time feedback "
            help_txt+="of the 3d model and footprint reciprocal position.</b><br>"
            help_txt+="With this tool is possible to download a part from on-line libraries, align the model to kicad footprint "
            help_txt+="and export the model to wrl, for immediate 3d-viewer alignment in pcbnew.<br>"
            help_txt+="Now the two words are connected for a better collaboration; just <b>design in kicad EDA</b> and transfer "
            help_txt+="the artwork to <b>MCAD (FreeCAD)</b> smoothly.<br>"
            help_txt+="<b>The workflow is very simple</b> and maintains the usual way to work with kicad:<br>"
            help_txt+="Add models to your library creating 3D models in FreeCAD, or getting models from online libs "
            help_txt+="or from the parametric 3D lib expressly done to kicad <a href='https://github.com/easyw/kicad-3d-models-in-freecad' target='_blank'>kicadStepUp 3D STEP models generator</a><br>"
            help_txt+="Once you have your 3D MCAD model, <b>you need to have a copy of that in STEP and VRML format.</b> <br>"
            help_txt+="(with the latest kicad release you can only have STEP model, VRML is not needed anymore, but <b>it is possible"
            help_txt+=" to mix VRML, STEP and IGES format</b>)<br>"        
            help_txt+="Just exporting the model with FreeCAD and put your model in the same folder in which "
            help_txt+="normally you are used to put vrml models; the script will assembly the MCAD board and models as in 3d-viewer of kicad."       
            help_txt+="<br><b>NB<br>STEP model has to be fused in single object</b><br>(Part Boolean Union of objects)"
            help_txt+="<br><b>or a Compoud</b> (Part Makecompound of objects)</b>"
            help_txt+="<hr><b>enable 'Report view' Panel to see helping messages</b>"
            help_txt+="</font><br>"
            self.textEdit.setText(help_txt)
            #self.textEdit.setTextColor(QtGui.QColor('black'))
            #self.textEdit.setStyleSheet("background-color: rgb(255, 255, 255)"); 
            # to reset it to default color ...
            #txtEdit->setStyleSheet("");
            expanded_view=2
            #cfgParsRead(configFilePath)
        else:
            expanded_view=0
            clear_console()
            KSUWidget.setVisibility=False
            #textEdit_dim = textEdit_dim_hide
            #self.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
            cfg_read_all()
            if docking_mode == 'float':
                undock()
                KSUWidget.setVisibility=True
            elif docking_mode == 'left':
                #tabify()
                dock()
                KSUWidget.setVisibility=True
            else:
                dock_right()
                KSUWidget.setVisibility=True
            sayw("kicad StepUp version "+str(___ver___))
            #self.textEdit.setStyleSheet(""); 
        #say('onHelp')
        #reply = QtGui.QMessageBox.question(None, "", "step file exists, overwrite?",QtGui.QMessageBox.Yes | QtGui.QMessageBox.No, QtGui.QMessageBox.No)
##


if singleInstance():

    from threading import Timer
    
    KSUWidget = QtGui.QDockWidget()          # create a new dckwidget
    KSUWidget.ui = Ui_DockWidget()           # myWidget_Ui()             # load the Ui script
    KSUWidget.ui.setupUi(KSUWidget) # setup the ui
    KSUWidget.setObjectName("kicadStepUp")
            
    paramGet = FreeCAD.ParamGet("User parameter:BaseApp/Preferences/MainWindow")
    if len(paramGet.GetString("StyleSheet"))>0: #we are using a StyleSheet
        KSUWidget.setStyleSheet('QPushButton {border-radius: 0px; padding: 1px 2px;}')

    t=FreeCADGui.getMainWindow()
    ## wf = t.findChild(QtGui.QDockWidget, "KSUWidget")
    cv = t.findChild(QtGui.QDockWidget, "Combo View")
    #say( "Combo View" + str(cv))
    ## print( "KSUWidget" + str(wf))        
    cv.setFeatures( QtGui.QDockWidget.DockWidgetMovable | QtGui.QDockWidget.DockWidgetFloatable|QtGui.QDockWidget.DockWidgetClosable )
    #KSUWidget.setFeatures( QtGui.QDockWidget.DockWidgetMovable | QtGui.QDockWidget.DockWidgetFloatable|QtGui.QDockWidget.DockWidgetClosable )
    KSUWidget.setFeatures( QtGui.QDockWidget.DockWidgetMovable | QtGui.QDockWidget.DockWidgetFloatable) #|QtGui.QDockWidget.DockWidgetClosable )
    
    
    ksu_in_tab=False
    
    #tabify_widg=True
    #tabify_widg=False
    #dock_to_right=True
    
    
    if docking_mode == 'float':
        tabify()
        undock()
        textEdit_dim=textEdit_dim_base
        KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
        
    elif docking_mode == 'left':
        textEdit_dim=textEdit_dim_hide
        KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
        dock()
        ##tabify()
        #.Visible=False
    else:
        textEdit_dim=textEdit_dim_hide
        KSUWidget.ui.textEdit.setGeometry(textEdit_dim[0],textEdit_dim[1],textEdit_dim[2],textEdit_dim[3])
        dock_right()

    KSUWidget.activateWindow()
    KSUWidget.raise_()
    sayw('done!')


    #if (tabify_widg):
    #    tabify()
    #elif not dock_to_right:
    #    #KSUmw = FreeCADGui.getMainWindow()                 # PySide # the active qt window, = the freecad window since we are inside it 
    #    tabify()
    #    undock()
    #    #KSUmw.addDockWidget(QtCore.Qt.RightDockWidgetArea,KSUWidget)  # add the widget to the main window  
    #else:
    #    dock_right()

